// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MADS.proto

#include "MADS.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AlphanumericalValue_MADS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DateValue_MADS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NumericalValue_MADS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Object_MADS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RGBValue_MADS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_Tag_MADS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TagSet_MADS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Tagging_MADS_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_MADS_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TimeValue_MADS_2eproto;
namespace MADS {
class ObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Object> _instance;
} _Object_default_instance_;
class GetObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectRequest> _instance;
} _GetObjectRequest_default_instance_;
class GetObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetObjectResponse> _instance;
} _GetObjectResponse_default_instance_;
class CreateObjectRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectRequest> _instance;
} _CreateObjectRequest_default_instance_;
class CreateObjectResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateObjectResponse> _instance;
} _CreateObjectResponse_default_instance_;
class TagSetDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TagSet> _instance;
} _TagSet_default_instance_;
class GetTagSetsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTagSetsRequest> _instance;
} _GetTagSetsRequest_default_instance_;
class GetTagSetsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTagSetsResponse> _instance;
} _GetTagSetsResponse_default_instance_;
class GetTagSetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTagSetRequest> _instance;
} _GetTagSetRequest_default_instance_;
class GetTagSetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTagSetResponse> _instance;
} _GetTagSetResponse_default_instance_;
class CreateTagSetRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateTagSetRequest> _instance;
} _CreateTagSetRequest_default_instance_;
class CreateTagSetResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateTagSetResponse> _instance;
} _CreateTagSetResponse_default_instance_;
class AlphanumericalValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AlphanumericalValue> _instance;
} _AlphanumericalValue_default_instance_;
class NumericalValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NumericalValue> _instance;
} _NumericalValue_default_instance_;
class DateValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DateValue> _instance;
} _DateValue_default_instance_;
class TimeValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TimeValue> _instance;
} _TimeValue_default_instance_;
class RGBValueDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RGBValue> _instance;
} _RGBValue_default_instance_;
class TagDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Tag> _instance;
  const ::MADS::AlphanumericalValue* alphanumerical_;
  const ::MADS::NumericalValue* numerical_;
  const ::MADS::DateValue* date_;
  const ::MADS::TimeValue* time_;
  const ::MADS::RGBValue* rgb_;
} _Tag_default_instance_;
class GetTagsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTagsRequest> _instance;
} _GetTagsRequest_default_instance_;
class GetTagsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTagsResponse> _instance;
} _GetTagsResponse_default_instance_;
class GetTagRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTagRequest> _instance;
} _GetTagRequest_default_instance_;
class GetTagResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTagResponse> _instance;
} _GetTagResponse_default_instance_;
class CreateTagRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateTagRequest> _instance;
  const ::MADS::AlphanumericalValue* alphanumerical_;
  const ::MADS::NumericalValue* numerical_;
  const ::MADS::DateValue* date_;
  const ::MADS::TimeValue* time_;
  const ::MADS::RGBValue* rgb_;
} _CreateTagRequest_default_instance_;
class CreateTagResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateTagResponse> _instance;
} _CreateTagResponse_default_instance_;
class TaggingDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Tagging> _instance;
} _Tagging_default_instance_;
class GetTaggingsRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTaggingsRequest> _instance;
} _GetTaggingsRequest_default_instance_;
class GetTaggingsResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTaggingsResponse> _instance;
} _GetTaggingsResponse_default_instance_;
class GetTaggingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTaggingRequest> _instance;
} _GetTaggingRequest_default_instance_;
class GetTaggingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetTaggingResponse> _instance;
} _GetTaggingResponse_default_instance_;
class CreateTaggingRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateTaggingRequest> _instance;
} _CreateTaggingRequest_default_instance_;
class CreateTaggingResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CreateTaggingResponse> _instance;
} _CreateTaggingResponse_default_instance_;
class EmptyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Empty> _instance;
} _Empty_default_instance_;
}  // namespace MADS
static void InitDefaultsscc_info_AlphanumericalValue_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_AlphanumericalValue_default_instance_;
    new (ptr) ::MADS::AlphanumericalValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::AlphanumericalValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AlphanumericalValue_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AlphanumericalValue_MADS_2eproto}, {}};

static void InitDefaultsscc_info_CreateObjectRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_CreateObjectRequest_default_instance_;
    new (ptr) ::MADS::CreateObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::CreateObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateObjectRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateObjectRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_CreateObjectResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_CreateObjectResponse_default_instance_;
    new (ptr) ::MADS::CreateObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::CreateObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateObjectResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateObjectResponse_MADS_2eproto}, {
      &scc_info_Object_MADS_2eproto.base,}};

static void InitDefaultsscc_info_CreateTagRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_CreateTagRequest_default_instance_;
    new (ptr) ::MADS::CreateTagRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::CreateTagRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_CreateTagRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_CreateTagRequest_MADS_2eproto}, {
      &scc_info_AlphanumericalValue_MADS_2eproto.base,
      &scc_info_NumericalValue_MADS_2eproto.base,
      &scc_info_DateValue_MADS_2eproto.base,
      &scc_info_TimeValue_MADS_2eproto.base,
      &scc_info_RGBValue_MADS_2eproto.base,}};

static void InitDefaultsscc_info_CreateTagResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_CreateTagResponse_default_instance_;
    new (ptr) ::MADS::CreateTagResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::CreateTagResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateTagResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateTagResponse_MADS_2eproto}, {
      &scc_info_Tag_MADS_2eproto.base,}};

static void InitDefaultsscc_info_CreateTagSetRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_CreateTagSetRequest_default_instance_;
    new (ptr) ::MADS::CreateTagSetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::CreateTagSetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateTagSetRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateTagSetRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_CreateTagSetResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_CreateTagSetResponse_default_instance_;
    new (ptr) ::MADS::CreateTagSetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::CreateTagSetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateTagSetResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateTagSetResponse_MADS_2eproto}, {
      &scc_info_TagSet_MADS_2eproto.base,}};

static void InitDefaultsscc_info_CreateTaggingRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_CreateTaggingRequest_default_instance_;
    new (ptr) ::MADS::CreateTaggingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::CreateTaggingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CreateTaggingRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CreateTaggingRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_CreateTaggingResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_CreateTaggingResponse_default_instance_;
    new (ptr) ::MADS::CreateTaggingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::CreateTaggingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_CreateTaggingResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_CreateTaggingResponse_MADS_2eproto}, {
      &scc_info_Tagging_MADS_2eproto.base,}};

static void InitDefaultsscc_info_DateValue_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_DateValue_default_instance_;
    new (ptr) ::MADS::DateValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::DateValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DateValue_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_DateValue_MADS_2eproto}, {}};

static void InitDefaultsscc_info_Empty_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_Empty_default_instance_;
    new (ptr) ::MADS::Empty();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::Empty::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Empty_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Empty_MADS_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetObjectRequest_default_instance_;
    new (ptr) ::MADS::GetObjectRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetObjectRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetObjectRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetObjectRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_GetObjectResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetObjectResponse_default_instance_;
    new (ptr) ::MADS::GetObjectResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetObjectResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetObjectResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetObjectResponse_MADS_2eproto}, {
      &scc_info_Object_MADS_2eproto.base,}};

static void InitDefaultsscc_info_GetTagRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTagRequest_default_instance_;
    new (ptr) ::MADS::GetTagRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTagRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetTagRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetTagRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_GetTagResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTagResponse_default_instance_;
    new (ptr) ::MADS::GetTagResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTagResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetTagResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetTagResponse_MADS_2eproto}, {
      &scc_info_Tag_MADS_2eproto.base,}};

static void InitDefaultsscc_info_GetTagSetRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTagSetRequest_default_instance_;
    new (ptr) ::MADS::GetTagSetRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTagSetRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetTagSetRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetTagSetRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_GetTagSetResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTagSetResponse_default_instance_;
    new (ptr) ::MADS::GetTagSetResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTagSetResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetTagSetResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetTagSetResponse_MADS_2eproto}, {
      &scc_info_TagSet_MADS_2eproto.base,}};

static void InitDefaultsscc_info_GetTagSetsRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTagSetsRequest_default_instance_;
    new (ptr) ::MADS::GetTagSetsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTagSetsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetTagSetsRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetTagSetsRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_GetTagSetsResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTagSetsResponse_default_instance_;
    new (ptr) ::MADS::GetTagSetsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTagSetsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetTagSetsResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetTagSetsResponse_MADS_2eproto}, {
      &scc_info_TagSet_MADS_2eproto.base,}};

static void InitDefaultsscc_info_GetTaggingRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTaggingRequest_default_instance_;
    new (ptr) ::MADS::GetTaggingRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTaggingRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetTaggingRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetTaggingRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_GetTaggingResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTaggingResponse_default_instance_;
    new (ptr) ::MADS::GetTaggingResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTaggingResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetTaggingResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetTaggingResponse_MADS_2eproto}, {
      &scc_info_Tagging_MADS_2eproto.base,}};

static void InitDefaultsscc_info_GetTaggingsRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTaggingsRequest_default_instance_;
    new (ptr) ::MADS::GetTaggingsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTaggingsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetTaggingsRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetTaggingsRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_GetTaggingsResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTaggingsResponse_default_instance_;
    new (ptr) ::MADS::GetTaggingsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTaggingsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetTaggingsResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetTaggingsResponse_MADS_2eproto}, {
      &scc_info_Tagging_MADS_2eproto.base,}};

static void InitDefaultsscc_info_GetTagsRequest_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTagsRequest_default_instance_;
    new (ptr) ::MADS::GetTagsRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTagsRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetTagsRequest_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetTagsRequest_MADS_2eproto}, {}};

static void InitDefaultsscc_info_GetTagsResponse_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_GetTagsResponse_default_instance_;
    new (ptr) ::MADS::GetTagsResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::GetTagsResponse::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetTagsResponse_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetTagsResponse_MADS_2eproto}, {
      &scc_info_Tag_MADS_2eproto.base,}};

static void InitDefaultsscc_info_NumericalValue_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_NumericalValue_default_instance_;
    new (ptr) ::MADS::NumericalValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::NumericalValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NumericalValue_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NumericalValue_MADS_2eproto}, {}};

static void InitDefaultsscc_info_Object_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_Object_default_instance_;
    new (ptr) ::MADS::Object();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::Object::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Object_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Object_MADS_2eproto}, {}};

static void InitDefaultsscc_info_RGBValue_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_RGBValue_default_instance_;
    new (ptr) ::MADS::RGBValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::RGBValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RGBValue_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RGBValue_MADS_2eproto}, {}};

static void InitDefaultsscc_info_Tag_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_Tag_default_instance_;
    new (ptr) ::MADS::Tag();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::Tag::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_Tag_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_Tag_MADS_2eproto}, {
      &scc_info_AlphanumericalValue_MADS_2eproto.base,
      &scc_info_NumericalValue_MADS_2eproto.base,
      &scc_info_DateValue_MADS_2eproto.base,
      &scc_info_TimeValue_MADS_2eproto.base,
      &scc_info_RGBValue_MADS_2eproto.base,}};

static void InitDefaultsscc_info_TagSet_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_TagSet_default_instance_;
    new (ptr) ::MADS::TagSet();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::TagSet::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TagSet_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TagSet_MADS_2eproto}, {}};

static void InitDefaultsscc_info_Tagging_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_Tagging_default_instance_;
    new (ptr) ::MADS::Tagging();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::Tagging::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Tagging_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Tagging_MADS_2eproto}, {}};

static void InitDefaultsscc_info_TimeValue_MADS_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::MADS::_TimeValue_default_instance_;
    new (ptr) ::MADS::TimeValue();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::MADS::TimeValue::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TimeValue_MADS_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TimeValue_MADS_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_MADS_2eproto[32];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_MADS_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_MADS_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_MADS_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::Object, id_),
  PROTOBUF_FIELD_OFFSET(::MADS::Object, uri_),
  PROTOBUF_FIELD_OFFSET(::MADS::Object, thumbnail_),
  PROTOBUF_FIELD_OFFSET(::MADS::Object, filetype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetObjectRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetObjectResponse, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateObjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateObjectRequest, uri_),
  PROTOBUF_FIELD_OFFSET(::MADS::CreateObjectRequest, filetype_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateObjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateObjectResponse, object_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::TagSet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::TagSet, id_),
  PROTOBUF_FIELD_OFFSET(::MADS::TagSet, name_),
  PROTOBUF_FIELD_OFFSET(::MADS::TagSet, description_),
  PROTOBUF_FIELD_OFFSET(::MADS::TagSet, type_),
  PROTOBUF_FIELD_OFFSET(::MADS::TagSet, accessid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagSetsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagSetsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagSetsResponse, tagsets_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagSetRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagSetResponse, tagset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagSetRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagSetRequest, name_),
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagSetRequest, description_),
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagSetRequest, type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagSetResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagSetResponse, tagset_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::AlphanumericalValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::AlphanumericalValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::NumericalValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::NumericalValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::DateValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::DateValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::TimeValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::TimeValue, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::RGBValue, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::RGBValue, red_),
  PROTOBUF_FIELD_OFFSET(::MADS::RGBValue, green_),
  PROTOBUF_FIELD_OFFSET(::MADS::RGBValue, blue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::Tag, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::MADS::Tag, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::Tag, id_),
  PROTOBUF_FIELD_OFFSET(::MADS::Tag, tagsetid_),
  PROTOBUF_FIELD_OFFSET(::MADS::Tag, typeid__),
  offsetof(::MADS::TagDefaultTypeInternal, alphanumerical_),
  offsetof(::MADS::TagDefaultTypeInternal, numerical_),
  offsetof(::MADS::TagDefaultTypeInternal, date_),
  offsetof(::MADS::TagDefaultTypeInternal, time_),
  offsetof(::MADS::TagDefaultTypeInternal, rgb_),
  PROTOBUF_FIELD_OFFSET(::MADS::Tag, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagsResponse, tags_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagRequest, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTagResponse, tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagRequest, tagsetid_),
  offsetof(::MADS::CreateTagRequestDefaultTypeInternal, alphanumerical_),
  offsetof(::MADS::CreateTagRequestDefaultTypeInternal, numerical_),
  offsetof(::MADS::CreateTagRequestDefaultTypeInternal, date_),
  offsetof(::MADS::CreateTagRequestDefaultTypeInternal, time_),
  offsetof(::MADS::CreateTagRequestDefaultTypeInternal, rgb_),
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagRequest, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTagResponse, tag_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::Tagging, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::Tagging, tagid_),
  PROTOBUF_FIELD_OFFSET(::MADS::Tagging, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingsRequest, tagid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingsResponse, taggings_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingRequest, tagid_),
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::GetTaggingResponse, tagging_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTaggingRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTaggingRequest, tagid_),
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTaggingRequest, objectid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTaggingResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::MADS::CreateTaggingResponse, tagging_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::MADS::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::MADS::Object)},
  { 9, -1, sizeof(::MADS::GetObjectRequest)},
  { 15, -1, sizeof(::MADS::GetObjectResponse)},
  { 21, -1, sizeof(::MADS::CreateObjectRequest)},
  { 28, -1, sizeof(::MADS::CreateObjectResponse)},
  { 34, -1, sizeof(::MADS::TagSet)},
  { 44, -1, sizeof(::MADS::GetTagSetsRequest)},
  { 49, -1, sizeof(::MADS::GetTagSetsResponse)},
  { 55, -1, sizeof(::MADS::GetTagSetRequest)},
  { 61, -1, sizeof(::MADS::GetTagSetResponse)},
  { 67, -1, sizeof(::MADS::CreateTagSetRequest)},
  { 75, -1, sizeof(::MADS::CreateTagSetResponse)},
  { 81, -1, sizeof(::MADS::AlphanumericalValue)},
  { 87, -1, sizeof(::MADS::NumericalValue)},
  { 93, -1, sizeof(::MADS::DateValue)},
  { 99, -1, sizeof(::MADS::TimeValue)},
  { 105, -1, sizeof(::MADS::RGBValue)},
  { 113, -1, sizeof(::MADS::Tag)},
  { 127, -1, sizeof(::MADS::GetTagsRequest)},
  { 132, -1, sizeof(::MADS::GetTagsResponse)},
  { 138, -1, sizeof(::MADS::GetTagRequest)},
  { 144, -1, sizeof(::MADS::GetTagResponse)},
  { 150, -1, sizeof(::MADS::CreateTagRequest)},
  { 162, -1, sizeof(::MADS::CreateTagResponse)},
  { 168, -1, sizeof(::MADS::Tagging)},
  { 175, -1, sizeof(::MADS::GetTaggingsRequest)},
  { 181, -1, sizeof(::MADS::GetTaggingsResponse)},
  { 187, -1, sizeof(::MADS::GetTaggingRequest)},
  { 194, -1, sizeof(::MADS::GetTaggingResponse)},
  { 200, -1, sizeof(::MADS::CreateTaggingRequest)},
  { 207, -1, sizeof(::MADS::CreateTaggingResponse)},
  { 213, -1, sizeof(::MADS::Empty)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_Object_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_CreateObjectRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_CreateObjectResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_TagSet_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTagSetsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTagSetsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTagSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTagSetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_CreateTagSetRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_CreateTagSetResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_AlphanumericalValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_NumericalValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_DateValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_TimeValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_RGBValue_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_Tag_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTagsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTagsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTagRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTagResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_CreateTagRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_CreateTagResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_Tagging_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTaggingsRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTaggingsResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTaggingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_GetTaggingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_CreateTaggingRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_CreateTaggingResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::MADS::_Empty_default_instance_),
};

const char descriptor_table_protodef_MADS_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\nMADS.proto\022\004MADS\"F\n\006Object\022\n\n\002id\030\001 \001(\003"
  "\022\013\n\003URI\030\002 \001(\t\022\021\n\tthumbnail\030\003 \001(\t\022\020\n\010file"
  "Type\030\004 \001(\t\"\036\n\020GetObjectRequest\022\n\n\002id\030\001 \001"
  "(\003\"1\n\021GetObjectResponse\022\034\n\006object\030\001 \001(\0132"
  "\014.MADS.Object\"4\n\023CreateObjectRequest\022\013\n\003"
  "URI\030\001 \001(\t\022\020\n\010fileType\030\003 \001(\t\"4\n\024CreateObj"
  "ectResponse\022\034\n\006object\030\001 \001(\0132\014.MADS.Objec"
  "t\"i\n\006TagSet\022\n\n\002id\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\023\n"
  "\013description\030\003 \001(\t\022\036\n\004type\030\004 \001(\0162\020.MADS."
  "TagSetType\022\020\n\010accessId\030\005 \001(\003\"\023\n\021GetTagSe"
  "tsRequest\"3\n\022GetTagSetsResponse\022\035\n\007tagse"
  "ts\030\001 \003(\0132\014.MADS.TagSet\"\036\n\020GetTagSetReque"
  "st\022\n\n\002id\030\001 \001(\003\"1\n\021GetTagSetResponse\022\034\n\006t"
  "agset\030\001 \001(\0132\014.MADS.TagSet\"X\n\023CreateTagSe"
  "tRequest\022\014\n\004name\030\001 \001(\t\022\023\n\013description\030\002 "
  "\001(\t\022\036\n\004type\030\003 \001(\0162\020.MADS.TagSetType\"4\n\024C"
  "reateTagSetResponse\022\034\n\006tagset\030\001 \001(\0132\014.MA"
  "DS.TagSet\"$\n\023AlphanumericalValue\022\r\n\005valu"
  "e\030\001 \001(\t\"\037\n\016NumericalValue\022\r\n\005value\030\001 \001(\t"
  "\"\032\n\tDateValue\022\r\n\005value\030\001 \001(\t\"\032\n\tTimeValu"
  "e\022\r\n\005value\030\001 \001(\t\"4\n\010RGBValue\022\013\n\003red\030\001 \001("
  "\003\022\r\n\005green\030\002 \001(\003\022\014\n\004blue\030\003 \001(\003\"\375\001\n\003Tag\022\n"
  "\n\002id\030\001 \001(\003\022\020\n\010tagSetId\030\002 \001(\003\022\016\n\006typeId\030\003"
  " \001(\003\0223\n\016alphanumerical\030\004 \001(\0132\031.MADS.Alph"
  "anumericalValueH\000\022)\n\tnumerical\030\005 \001(\0132\024.M"
  "ADS.NumericalValueH\000\022\037\n\004date\030\006 \001(\0132\017.MAD"
  "S.DateValueH\000\022\037\n\004time\030\007 \001(\0132\017.MADS.TimeV"
  "alueH\000\022\035\n\003rgb\030\010 \001(\0132\016.MADS.RGBValueH\000B\007\n"
  "\005value\"\020\n\016GetTagsRequest\"*\n\017GetTagsRespo"
  "nse\022\027\n\004tags\030\001 \003(\0132\t.MADS.Tag\"\033\n\rGetTagRe"
  "quest\022\n\n\002id\030\001 \001(\003\"(\n\016GetTagResponse\022\026\n\003t"
  "ag\030\001 \001(\0132\t.MADS.Tag\"\356\001\n\020CreateTagRequest"
  "\022\020\n\010tagSetId\030\001 \001(\003\0223\n\016alphanumerical\030\004 \001"
  "(\0132\031.MADS.AlphanumericalValueH\000\022)\n\tnumer"
  "ical\030\005 \001(\0132\024.MADS.NumericalValueH\000\022\037\n\004da"
  "te\030\006 \001(\0132\017.MADS.DateValueH\000\022\037\n\004time\030\007 \001("
  "\0132\017.MADS.TimeValueH\000\022\035\n\003rgb\030\010 \001(\0132\016.MADS"
  ".RGBValueH\000B\007\n\005value\"+\n\021CreateTagRespons"
  "e\022\026\n\003tag\030\001 \001(\0132\t.MADS.Tag\"*\n\007Tagging\022\r\n\005"
  "tagId\030\001 \001(\003\022\020\n\010objectId\030\002 \001(\003\"#\n\022GetTagg"
  "ingsRequest\022\r\n\005tagId\030\001 \001(\003\"6\n\023GetTagging"
  "sResponse\022\037\n\010taggings\030\001 \003(\0132\r.MADS.Taggi"
  "ng\"4\n\021GetTaggingRequest\022\r\n\005tagId\030\001 \001(\003\022\020"
  "\n\010objectId\030\002 \001(\003\"4\n\022GetTaggingResponse\022\036"
  "\n\007tagging\030\001 \001(\0132\r.MADS.Tagging\"7\n\024Create"
  "TaggingRequest\022\r\n\005tagId\030\001 \001(\003\022\020\n\010objectI"
  "d\030\002 \001(\003\"7\n\025CreateTaggingResponse\022\036\n\007tagg"
  "ing\030\001 \001(\0132\r.MADS.Tagging\"\007\n\005Empty*^\n\nTag"
  "SetType\022\020\n\014TYPE_UNKNOWN\020\000\022\022\n\016ALPHANUMERI"
  "CAL\020\001\022\r\n\tNUMERICAL\020\002\022\010\n\004DATE\020\003\022\010\n\004TIME\020\004"
  "\022\007\n\003RGB\020\0052\304\006\n\014MADS_Service\022>\n\tgetObject\022"
  "\026.MADS.GetObjectRequest\032\027.MADS.GetObject"
  "Response\"\000\022G\n\014createObject\022\031.MADS.Create"
  "ObjectRequest\032\032.MADS.CreateObjectRespons"
  "e\"\000\022A\n\ngetTagSets\022\027.MADS.GetTagSetsReque"
  "st\032\030.MADS.GetTagSetsResponse\"\000\022>\n\tgetTag"
  "Set\022\026.MADS.GetTagSetRequest\032\027.MADS.GetTa"
  "gSetResponse\"\000\022G\n\014createTagSet\022\031.MADS.Cr"
  "eateTagSetRequest\032\032.MADS.CreateTagSetRes"
  "ponse\"\000\0228\n\007getTags\022\024.MADS.GetTagsRequest"
  "\032\025.MADS.GetTagsResponse\"\000\0225\n\006getTag\022\023.MA"
  "DS.GetTagRequest\032\024.MADS.GetTagResponse\"\000"
  "\022C\n\016createOrGetTag\022\026.MADS.CreateTagReque"
  "st\032\027.MADS.CreateTagResponse\"\000\022D\n\013getTagg"
  "ings\022\030.MADS.GetTaggingsRequest\032\031.MADS.Ge"
  "tTaggingsResponse\"\000\022A\n\ngetTagging\022\027.MADS"
  ".GetTaggingRequest\032\030.MADS.GetTaggingResp"
  "onse\"\000\022J\n\rcreateTagging\022\032.MADS.CreateTag"
  "gingRequest\032\033.MADS.CreateTaggingResponse"
  "\"\000\022)\n\013reConnectDB\022\013.MADS.Empty\032\013.MADS.Em"
  "pty\"\000\022)\n\013stopService\022\013.MADS.Empty\032\013.MADS"
  ".Empty\"\000b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_MADS_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_MADS_2eproto_sccs[32] = {
  &scc_info_AlphanumericalValue_MADS_2eproto.base,
  &scc_info_CreateObjectRequest_MADS_2eproto.base,
  &scc_info_CreateObjectResponse_MADS_2eproto.base,
  &scc_info_CreateTagRequest_MADS_2eproto.base,
  &scc_info_CreateTagResponse_MADS_2eproto.base,
  &scc_info_CreateTagSetRequest_MADS_2eproto.base,
  &scc_info_CreateTagSetResponse_MADS_2eproto.base,
  &scc_info_CreateTaggingRequest_MADS_2eproto.base,
  &scc_info_CreateTaggingResponse_MADS_2eproto.base,
  &scc_info_DateValue_MADS_2eproto.base,
  &scc_info_Empty_MADS_2eproto.base,
  &scc_info_GetObjectRequest_MADS_2eproto.base,
  &scc_info_GetObjectResponse_MADS_2eproto.base,
  &scc_info_GetTagRequest_MADS_2eproto.base,
  &scc_info_GetTagResponse_MADS_2eproto.base,
  &scc_info_GetTagSetRequest_MADS_2eproto.base,
  &scc_info_GetTagSetResponse_MADS_2eproto.base,
  &scc_info_GetTagSetsRequest_MADS_2eproto.base,
  &scc_info_GetTagSetsResponse_MADS_2eproto.base,
  &scc_info_GetTaggingRequest_MADS_2eproto.base,
  &scc_info_GetTaggingResponse_MADS_2eproto.base,
  &scc_info_GetTaggingsRequest_MADS_2eproto.base,
  &scc_info_GetTaggingsResponse_MADS_2eproto.base,
  &scc_info_GetTagsRequest_MADS_2eproto.base,
  &scc_info_GetTagsResponse_MADS_2eproto.base,
  &scc_info_NumericalValue_MADS_2eproto.base,
  &scc_info_Object_MADS_2eproto.base,
  &scc_info_RGBValue_MADS_2eproto.base,
  &scc_info_Tag_MADS_2eproto.base,
  &scc_info_TagSet_MADS_2eproto.base,
  &scc_info_Tagging_MADS_2eproto.base,
  &scc_info_TimeValue_MADS_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_MADS_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_MADS_2eproto = {
  false, false, descriptor_table_protodef_MADS_2eproto, "MADS.proto", 2856,
  &descriptor_table_MADS_2eproto_once, descriptor_table_MADS_2eproto_sccs, descriptor_table_MADS_2eproto_deps, 32, 0,
  schemas, file_default_instances, TableStruct_MADS_2eproto::offsets,
  file_level_metadata_MADS_2eproto, 32, file_level_enum_descriptors_MADS_2eproto, file_level_service_descriptors_MADS_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_MADS_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_MADS_2eproto)), true);
namespace MADS {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* TagSetType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_MADS_2eproto);
  return file_level_enum_descriptors_MADS_2eproto[0];
}
bool TagSetType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Object::InitAsDefaultInstance() {
}
class Object::_Internal {
 public:
};

Object::Object(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.Object)
}
Object::Object(const Object& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uri().empty()) {
    uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uri(),
      GetArena());
  }
  thumbnail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_thumbnail().empty()) {
    thumbnail_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_thumbnail(),
      GetArena());
  }
  filetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filetype().empty()) {
    filetype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filetype(),
      GetArena());
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:MADS.Object)
}

void Object::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Object_MADS_2eproto.base);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  thumbnail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  id_ = PROTOBUF_LONGLONG(0);
}

Object::~Object() {
  // @@protoc_insertion_point(destructor:MADS.Object)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Object::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  thumbnail_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Object::ArenaDtor(void* object) {
  Object* _this = reinterpret_cast< Object* >(object);
  (void)_this;
}
void Object::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Object& Object::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Object_MADS_2eproto.base);
  return *internal_default_instance();
}


void Object::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.Object)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  thumbnail_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filetype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Object::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string URI = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.Object.URI"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string thumbnail = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_thumbnail();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.Object.thumbnail"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fileType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_filetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.Object.fileType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Object::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.Object)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string URI = 2;
  if (this->uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.Object.URI");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_uri(), target);
  }

  // string thumbnail = 3;
  if (this->thumbnail().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_thumbnail().data(), static_cast<int>(this->_internal_thumbnail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.Object.thumbnail");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_thumbnail(), target);
  }

  // string fileType = 4;
  if (this->filetype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filetype().data(), static_cast<int>(this->_internal_filetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.Object.fileType");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_filetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.Object)
  return target;
}

size_t Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.Object)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string URI = 2;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // string thumbnail = 3;
  if (this->thumbnail().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_thumbnail());
  }

  // string fileType = 4;
  if (this->filetype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filetype());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Object::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const Object* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Object>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.Object)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.Object)
    MergeFrom(*source);
  }
}

void Object::MergeFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    _internal_set_uri(from._internal_uri());
  }
  if (from.thumbnail().size() > 0) {
    _internal_set_thumbnail(from._internal_thumbnail());
  }
  if (from.filetype().size() > 0) {
    _internal_set_filetype(from._internal_filetype());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void Object::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Object::CopyFrom(const Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Object::IsInitialized() const {
  return true;
}

void Object::InternalSwap(Object* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uri_.Swap(&other->uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  thumbnail_.Swap(&other->thumbnail_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filetype_.Swap(&other->filetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Object::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectRequest::InitAsDefaultInstance() {
}
class GetObjectRequest::_Internal {
 public:
};

GetObjectRequest::GetObjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetObjectRequest)
}
GetObjectRequest::GetObjectRequest(const GetObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:MADS.GetObjectRequest)
}

void GetObjectRequest::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

GetObjectRequest::~GetObjectRequest() {
  // @@protoc_insertion_point(destructor:MADS.GetObjectRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetObjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetObjectRequest::ArenaDtor(void* object) {
  GetObjectRequest* _this = reinterpret_cast< GetObjectRequest* >(object);
  (void)_this;
}
void GetObjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectRequest& GetObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetObjectRequest)
  return target;
}

size_t GetObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetObjectRequest)
    MergeFrom(*source);
  }
}

void GetObjectRequest::MergeFrom(const GetObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectRequest::CopyFrom(const GetObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectRequest::IsInitialized() const {
  return true;
}

void GetObjectRequest::InternalSwap(GetObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetObjectResponse::InitAsDefaultInstance() {
  ::MADS::_GetObjectResponse_default_instance_._instance.get_mutable()->object_ = const_cast< ::MADS::Object*>(
      ::MADS::Object::internal_default_instance());
}
class GetObjectResponse::_Internal {
 public:
  static const ::MADS::Object& object(const GetObjectResponse* msg);
};

const ::MADS::Object&
GetObjectResponse::_Internal::object(const GetObjectResponse* msg) {
  return *msg->object_;
}
GetObjectResponse::GetObjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetObjectResponse)
}
GetObjectResponse::GetObjectResponse(const GetObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::MADS::Object(*from.object_);
  } else {
    object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MADS.GetObjectResponse)
}

void GetObjectResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetObjectResponse_MADS_2eproto.base);
  object_ = nullptr;
}

GetObjectResponse::~GetObjectResponse() {
  // @@protoc_insertion_point(destructor:MADS.GetObjectResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetObjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete object_;
}

void GetObjectResponse::ArenaDtor(void* object) {
  GetObjectResponse* _this = reinterpret_cast< GetObjectResponse* >(object);
  (void)_this;
}
void GetObjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetObjectResponse& GetObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetObjectResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .MADS.Object object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MADS.Object object = 1;
  if (this->has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetObjectResponse)
  return target;
}

size_t GetObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MADS.Object object = 1;
  if (this->has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetObjectResponse)
    MergeFrom(*source);
  }
}

void GetObjectResponse::MergeFrom(const GetObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    _internal_mutable_object()->::MADS::Object::MergeFrom(from._internal_object());
  }
}

void GetObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetObjectResponse::CopyFrom(const GetObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetObjectResponse::IsInitialized() const {
  return true;
}

void GetObjectResponse::InternalSwap(GetObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(object_, other->object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectRequest::InitAsDefaultInstance() {
}
class CreateObjectRequest::_Internal {
 public:
};

CreateObjectRequest::CreateObjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.CreateObjectRequest)
}
CreateObjectRequest::CreateObjectRequest(const CreateObjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_uri().empty()) {
    uri_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_uri(),
      GetArena());
  }
  filetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_filetype().empty()) {
    filetype_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_filetype(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:MADS.CreateObjectRequest)
}

void CreateObjectRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateObjectRequest_MADS_2eproto.base);
  uri_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

CreateObjectRequest::~CreateObjectRequest() {
  // @@protoc_insertion_point(destructor:MADS.CreateObjectRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateObjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  uri_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  filetype_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateObjectRequest::ArenaDtor(void* object) {
  CreateObjectRequest* _this = reinterpret_cast< CreateObjectRequest* >(object);
  (void)_this;
}
void CreateObjectRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateObjectRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectRequest& CreateObjectRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.CreateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  uri_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filetype_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateObjectRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string URI = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_uri();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.CreateObjectRequest.URI"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string fileType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_filetype();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.CreateObjectRequest.fileType"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.CreateObjectRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string URI = 1;
  if (this->uri().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uri().data(), static_cast<int>(this->_internal_uri().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.CreateObjectRequest.URI");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_uri(), target);
  }

  // string fileType = 3;
  if (this->filetype().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_filetype().data(), static_cast<int>(this->_internal_filetype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.CreateObjectRequest.fileType");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_filetype(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.CreateObjectRequest)
  return target;
}

size_t CreateObjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.CreateObjectRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string URI = 1;
  if (this->uri().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uri());
  }

  // string fileType = 3;
  if (this->filetype().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_filetype());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.CreateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.CreateObjectRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.CreateObjectRequest)
    MergeFrom(*source);
  }
}

void CreateObjectRequest::MergeFrom(const CreateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.CreateObjectRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.uri().size() > 0) {
    _internal_set_uri(from._internal_uri());
  }
  if (from.filetype().size() > 0) {
    _internal_set_filetype(from._internal_filetype());
  }
}

void CreateObjectRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.CreateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectRequest::CopyFrom(const CreateObjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.CreateObjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectRequest::IsInitialized() const {
  return true;
}

void CreateObjectRequest::InternalSwap(CreateObjectRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  uri_.Swap(&other->uri_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  filetype_.Swap(&other->filetype_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateObjectResponse::InitAsDefaultInstance() {
  ::MADS::_CreateObjectResponse_default_instance_._instance.get_mutable()->object_ = const_cast< ::MADS::Object*>(
      ::MADS::Object::internal_default_instance());
}
class CreateObjectResponse::_Internal {
 public:
  static const ::MADS::Object& object(const CreateObjectResponse* msg);
};

const ::MADS::Object&
CreateObjectResponse::_Internal::object(const CreateObjectResponse* msg) {
  return *msg->object_;
}
CreateObjectResponse::CreateObjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.CreateObjectResponse)
}
CreateObjectResponse::CreateObjectResponse(const CreateObjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_object()) {
    object_ = new ::MADS::Object(*from.object_);
  } else {
    object_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MADS.CreateObjectResponse)
}

void CreateObjectResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateObjectResponse_MADS_2eproto.base);
  object_ = nullptr;
}

CreateObjectResponse::~CreateObjectResponse() {
  // @@protoc_insertion_point(destructor:MADS.CreateObjectResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateObjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete object_;
}

void CreateObjectResponse::ArenaDtor(void* object) {
  CreateObjectResponse* _this = reinterpret_cast< CreateObjectResponse* >(object);
  (void)_this;
}
void CreateObjectResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateObjectResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateObjectResponse& CreateObjectResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateObjectResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void CreateObjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.CreateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && object_ != nullptr) {
    delete object_;
  }
  object_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateObjectResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .MADS.Object object = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_object(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateObjectResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.CreateObjectResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MADS.Object object = 1;
  if (this->has_object()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::object(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.CreateObjectResponse)
  return target;
}

size_t CreateObjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.CreateObjectResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MADS.Object object = 1;
  if (this->has_object()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *object_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateObjectResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.CreateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateObjectResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateObjectResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.CreateObjectResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.CreateObjectResponse)
    MergeFrom(*source);
  }
}

void CreateObjectResponse::MergeFrom(const CreateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.CreateObjectResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_object()) {
    _internal_mutable_object()->::MADS::Object::MergeFrom(from._internal_object());
  }
}

void CreateObjectResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.CreateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateObjectResponse::CopyFrom(const CreateObjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.CreateObjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateObjectResponse::IsInitialized() const {
  return true;
}

void CreateObjectResponse::InternalSwap(CreateObjectResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(object_, other->object_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateObjectResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TagSet::InitAsDefaultInstance() {
}
class TagSet::_Internal {
 public:
};

TagSet::TagSet(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.TagSet)
}
TagSet::TagSet(const TagSet& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&id_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:MADS.TagSet)
}

void TagSet::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TagSet_MADS_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
}

TagSet::~TagSet() {
  // @@protoc_insertion_point(destructor:MADS.TagSet)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TagSet::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TagSet::ArenaDtor(void* object) {
  TagSet* _this = reinterpret_cast< TagSet* >(object);
  (void)_this;
}
void TagSet::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TagSet::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TagSet& TagSet::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TagSet_MADS_2eproto.base);
  return *internal_default_instance();
}


void TagSet::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.TagSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&id_)) + sizeof(type_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TagSet::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.TagSet.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.TagSet.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.TagSetType type = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::MADS::TagSetType>(val));
        } else goto handle_unusual;
        continue;
      // int64 accessId = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          accessid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TagSet::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.TagSet)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // string name = 2;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.TagSet.name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string description = 3;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.TagSet.description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .MADS.TagSetType type = 4;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_type(), target);
  }

  // int64 accessId = 5;
  if (this->accessid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(5, this->_internal_accessid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.TagSet)
  return target;
}

size_t TagSet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.TagSet)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 3;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int64 accessId = 5;
  if (this->accessid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_accessid());
  }

  // .MADS.TagSetType type = 4;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TagSet::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.TagSet)
  GOOGLE_DCHECK_NE(&from, this);
  const TagSet* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TagSet>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.TagSet)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.TagSet)
    MergeFrom(*source);
  }
}

void TagSet::MergeFrom(const TagSet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.TagSet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.accessid() != 0) {
    _internal_set_accessid(from._internal_accessid());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void TagSet::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.TagSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TagSet::CopyFrom(const TagSet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.TagSet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TagSet::IsInitialized() const {
  return true;
}

void TagSet::InternalSwap(TagSet* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TagSet, type_)
      + sizeof(TagSet::type_)
      - PROTOBUF_FIELD_OFFSET(TagSet, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
}

::PROTOBUF_NAMESPACE_ID::Metadata TagSet::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTagSetsRequest::InitAsDefaultInstance() {
}
class GetTagSetsRequest::_Internal {
 public:
};

GetTagSetsRequest::GetTagSetsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTagSetsRequest)
}
GetTagSetsRequest::GetTagSetsRequest(const GetTagSetsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MADS.GetTagSetsRequest)
}

void GetTagSetsRequest::SharedCtor() {
}

GetTagSetsRequest::~GetTagSetsRequest() {
  // @@protoc_insertion_point(destructor:MADS.GetTagSetsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTagSetsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTagSetsRequest::ArenaDtor(void* object) {
  GetTagSetsRequest* _this = reinterpret_cast< GetTagSetsRequest* >(object);
  (void)_this;
}
void GetTagSetsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTagSetsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTagSetsRequest& GetTagSetsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTagSetsRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTagSetsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTagSetsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTagSetsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTagSetsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTagSetsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTagSetsRequest)
  return target;
}

size_t GetTagSetsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTagSetsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTagSetsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTagSetsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTagSetsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTagSetsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTagSetsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTagSetsRequest)
    MergeFrom(*source);
  }
}

void GetTagSetsRequest::MergeFrom(const GetTagSetsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTagSetsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetTagSetsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTagSetsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTagSetsRequest::CopyFrom(const GetTagSetsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTagSetsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTagSetsRequest::IsInitialized() const {
  return true;
}

void GetTagSetsRequest::InternalSwap(GetTagSetsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTagSetsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTagSetsResponse::InitAsDefaultInstance() {
}
class GetTagSetsResponse::_Internal {
 public:
};

GetTagSetsResponse::GetTagSetsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tagsets_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTagSetsResponse)
}
GetTagSetsResponse::GetTagSetsResponse(const GetTagSetsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tagsets_(from.tagsets_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MADS.GetTagSetsResponse)
}

void GetTagSetsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetTagSetsResponse_MADS_2eproto.base);
}

GetTagSetsResponse::~GetTagSetsResponse() {
  // @@protoc_insertion_point(destructor:MADS.GetTagSetsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTagSetsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTagSetsResponse::ArenaDtor(void* object) {
  GetTagSetsResponse* _this = reinterpret_cast< GetTagSetsResponse* >(object);
  (void)_this;
}
void GetTagSetsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTagSetsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTagSetsResponse& GetTagSetsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTagSetsResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTagSetsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTagSetsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagsets_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTagSetsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .MADS.TagSet tagsets = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tagsets(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTagSetsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTagSetsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MADS.TagSet tagsets = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tagsets_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_tagsets(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTagSetsResponse)
  return target;
}

size_t GetTagSetsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTagSetsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MADS.TagSet tagsets = 1;
  total_size += 1UL * this->_internal_tagsets_size();
  for (const auto& msg : this->tagsets_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTagSetsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTagSetsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTagSetsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTagSetsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTagSetsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTagSetsResponse)
    MergeFrom(*source);
  }
}

void GetTagSetsResponse::MergeFrom(const GetTagSetsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTagSetsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tagsets_.MergeFrom(from.tagsets_);
}

void GetTagSetsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTagSetsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTagSetsResponse::CopyFrom(const GetTagSetsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTagSetsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTagSetsResponse::IsInitialized() const {
  return true;
}

void GetTagSetsResponse::InternalSwap(GetTagSetsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tagsets_.InternalSwap(&other->tagsets_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTagSetsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTagSetRequest::InitAsDefaultInstance() {
}
class GetTagSetRequest::_Internal {
 public:
};

GetTagSetRequest::GetTagSetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTagSetRequest)
}
GetTagSetRequest::GetTagSetRequest(const GetTagSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:MADS.GetTagSetRequest)
}

void GetTagSetRequest::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

GetTagSetRequest::~GetTagSetRequest() {
  // @@protoc_insertion_point(destructor:MADS.GetTagSetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTagSetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTagSetRequest::ArenaDtor(void* object) {
  GetTagSetRequest* _this = reinterpret_cast< GetTagSetRequest* >(object);
  (void)_this;
}
void GetTagSetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTagSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTagSetRequest& GetTagSetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTagSetRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTagSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTagSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTagSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTagSetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTagSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTagSetRequest)
  return target;
}

size_t GetTagSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTagSetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTagSetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTagSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTagSetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTagSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTagSetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTagSetRequest)
    MergeFrom(*source);
  }
}

void GetTagSetRequest::MergeFrom(const GetTagSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTagSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetTagSetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTagSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTagSetRequest::CopyFrom(const GetTagSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTagSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTagSetRequest::IsInitialized() const {
  return true;
}

void GetTagSetRequest::InternalSwap(GetTagSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTagSetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTagSetResponse::InitAsDefaultInstance() {
  ::MADS::_GetTagSetResponse_default_instance_._instance.get_mutable()->tagset_ = const_cast< ::MADS::TagSet*>(
      ::MADS::TagSet::internal_default_instance());
}
class GetTagSetResponse::_Internal {
 public:
  static const ::MADS::TagSet& tagset(const GetTagSetResponse* msg);
};

const ::MADS::TagSet&
GetTagSetResponse::_Internal::tagset(const GetTagSetResponse* msg) {
  return *msg->tagset_;
}
GetTagSetResponse::GetTagSetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTagSetResponse)
}
GetTagSetResponse::GetTagSetResponse(const GetTagSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tagset()) {
    tagset_ = new ::MADS::TagSet(*from.tagset_);
  } else {
    tagset_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MADS.GetTagSetResponse)
}

void GetTagSetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetTagSetResponse_MADS_2eproto.base);
  tagset_ = nullptr;
}

GetTagSetResponse::~GetTagSetResponse() {
  // @@protoc_insertion_point(destructor:MADS.GetTagSetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTagSetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tagset_;
}

void GetTagSetResponse::ArenaDtor(void* object) {
  GetTagSetResponse* _this = reinterpret_cast< GetTagSetResponse* >(object);
  (void)_this;
}
void GetTagSetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTagSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTagSetResponse& GetTagSetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTagSetResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTagSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTagSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && tagset_ != nullptr) {
    delete tagset_;
  }
  tagset_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTagSetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .MADS.TagSet tagset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tagset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTagSetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTagSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MADS.TagSet tagset = 1;
  if (this->has_tagset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tagset(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTagSetResponse)
  return target;
}

size_t GetTagSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTagSetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MADS.TagSet tagset = 1;
  if (this->has_tagset()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tagset_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTagSetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTagSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTagSetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTagSetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTagSetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTagSetResponse)
    MergeFrom(*source);
  }
}

void GetTagSetResponse::MergeFrom(const GetTagSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTagSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tagset()) {
    _internal_mutable_tagset()->::MADS::TagSet::MergeFrom(from._internal_tagset());
  }
}

void GetTagSetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTagSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTagSetResponse::CopyFrom(const GetTagSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTagSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTagSetResponse::IsInitialized() const {
  return true;
}

void GetTagSetResponse::InternalSwap(GetTagSetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(tagset_, other->tagset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTagSetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateTagSetRequest::InitAsDefaultInstance() {
}
class CreateTagSetRequest::_Internal {
 public:
};

CreateTagSetRequest::CreateTagSetRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.CreateTagSetRequest)
}
CreateTagSetRequest::CreateTagSetRequest(const CreateTagSetRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_name(),
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_description(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:MADS.CreateTagSetRequest)
}

void CreateTagSetRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateTagSetRequest_MADS_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

CreateTagSetRequest::~CreateTagSetRequest() {
  // @@protoc_insertion_point(destructor:MADS.CreateTagSetRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTagSetRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CreateTagSetRequest::ArenaDtor(void* object) {
  CreateTagSetRequest* _this = reinterpret_cast< CreateTagSetRequest* >(object);
  (void)_this;
}
void CreateTagSetRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTagSetRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTagSetRequest& CreateTagSetRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateTagSetRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void CreateTagSetRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.CreateTagSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTagSetRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.CreateTagSetRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.CreateTagSetRequest.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.TagSetType type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::MADS::TagSetType>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTagSetRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.CreateTagSetRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.CreateTagSetRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.CreateTagSetRequest.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  // .MADS.TagSetType type = 3;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.CreateTagSetRequest)
  return target;
}

size_t CreateTagSetRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.CreateTagSetRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .MADS.TagSetType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTagSetRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.CreateTagSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTagSetRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTagSetRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.CreateTagSetRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.CreateTagSetRequest)
    MergeFrom(*source);
  }
}

void CreateTagSetRequest::MergeFrom(const CreateTagSetRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.CreateTagSetRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void CreateTagSetRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.CreateTagSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTagSetRequest::CopyFrom(const CreateTagSetRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.CreateTagSetRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTagSetRequest::IsInitialized() const {
  return true;
}

void CreateTagSetRequest::InternalSwap(CreateTagSetRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTagSetRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateTagSetResponse::InitAsDefaultInstance() {
  ::MADS::_CreateTagSetResponse_default_instance_._instance.get_mutable()->tagset_ = const_cast< ::MADS::TagSet*>(
      ::MADS::TagSet::internal_default_instance());
}
class CreateTagSetResponse::_Internal {
 public:
  static const ::MADS::TagSet& tagset(const CreateTagSetResponse* msg);
};

const ::MADS::TagSet&
CreateTagSetResponse::_Internal::tagset(const CreateTagSetResponse* msg) {
  return *msg->tagset_;
}
CreateTagSetResponse::CreateTagSetResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.CreateTagSetResponse)
}
CreateTagSetResponse::CreateTagSetResponse(const CreateTagSetResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tagset()) {
    tagset_ = new ::MADS::TagSet(*from.tagset_);
  } else {
    tagset_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MADS.CreateTagSetResponse)
}

void CreateTagSetResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateTagSetResponse_MADS_2eproto.base);
  tagset_ = nullptr;
}

CreateTagSetResponse::~CreateTagSetResponse() {
  // @@protoc_insertion_point(destructor:MADS.CreateTagSetResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTagSetResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tagset_;
}

void CreateTagSetResponse::ArenaDtor(void* object) {
  CreateTagSetResponse* _this = reinterpret_cast< CreateTagSetResponse* >(object);
  (void)_this;
}
void CreateTagSetResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTagSetResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTagSetResponse& CreateTagSetResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateTagSetResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void CreateTagSetResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.CreateTagSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && tagset_ != nullptr) {
    delete tagset_;
  }
  tagset_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTagSetResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .MADS.TagSet tagset = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tagset(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTagSetResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.CreateTagSetResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MADS.TagSet tagset = 1;
  if (this->has_tagset()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tagset(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.CreateTagSetResponse)
  return target;
}

size_t CreateTagSetResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.CreateTagSetResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MADS.TagSet tagset = 1;
  if (this->has_tagset()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tagset_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTagSetResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.CreateTagSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTagSetResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTagSetResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.CreateTagSetResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.CreateTagSetResponse)
    MergeFrom(*source);
  }
}

void CreateTagSetResponse::MergeFrom(const CreateTagSetResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.CreateTagSetResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tagset()) {
    _internal_mutable_tagset()->::MADS::TagSet::MergeFrom(from._internal_tagset());
  }
}

void CreateTagSetResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.CreateTagSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTagSetResponse::CopyFrom(const CreateTagSetResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.CreateTagSetResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTagSetResponse::IsInitialized() const {
  return true;
}

void CreateTagSetResponse::InternalSwap(CreateTagSetResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(tagset_, other->tagset_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTagSetResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AlphanumericalValue::InitAsDefaultInstance() {
}
class AlphanumericalValue::_Internal {
 public:
};

AlphanumericalValue::AlphanumericalValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.AlphanumericalValue)
}
AlphanumericalValue::AlphanumericalValue(const AlphanumericalValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:MADS.AlphanumericalValue)
}

void AlphanumericalValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AlphanumericalValue_MADS_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AlphanumericalValue::~AlphanumericalValue() {
  // @@protoc_insertion_point(destructor:MADS.AlphanumericalValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AlphanumericalValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AlphanumericalValue::ArenaDtor(void* object) {
  AlphanumericalValue* _this = reinterpret_cast< AlphanumericalValue* >(object);
  (void)_this;
}
void AlphanumericalValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AlphanumericalValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AlphanumericalValue& AlphanumericalValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AlphanumericalValue_MADS_2eproto.base);
  return *internal_default_instance();
}


void AlphanumericalValue::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.AlphanumericalValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AlphanumericalValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.AlphanumericalValue.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AlphanumericalValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.AlphanumericalValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.AlphanumericalValue.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.AlphanumericalValue)
  return target;
}

size_t AlphanumericalValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.AlphanumericalValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AlphanumericalValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.AlphanumericalValue)
  GOOGLE_DCHECK_NE(&from, this);
  const AlphanumericalValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AlphanumericalValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.AlphanumericalValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.AlphanumericalValue)
    MergeFrom(*source);
  }
}

void AlphanumericalValue::MergeFrom(const AlphanumericalValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.AlphanumericalValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void AlphanumericalValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.AlphanumericalValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AlphanumericalValue::CopyFrom(const AlphanumericalValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.AlphanumericalValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AlphanumericalValue::IsInitialized() const {
  return true;
}

void AlphanumericalValue::InternalSwap(AlphanumericalValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AlphanumericalValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NumericalValue::InitAsDefaultInstance() {
}
class NumericalValue::_Internal {
 public:
};

NumericalValue::NumericalValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.NumericalValue)
}
NumericalValue::NumericalValue(const NumericalValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:MADS.NumericalValue)
}

void NumericalValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NumericalValue_MADS_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

NumericalValue::~NumericalValue() {
  // @@protoc_insertion_point(destructor:MADS.NumericalValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void NumericalValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void NumericalValue::ArenaDtor(void* object) {
  NumericalValue* _this = reinterpret_cast< NumericalValue* >(object);
  (void)_this;
}
void NumericalValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void NumericalValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NumericalValue& NumericalValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NumericalValue_MADS_2eproto.base);
  return *internal_default_instance();
}


void NumericalValue::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.NumericalValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* NumericalValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.NumericalValue.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NumericalValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.NumericalValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.NumericalValue.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.NumericalValue)
  return target;
}

size_t NumericalValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.NumericalValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NumericalValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.NumericalValue)
  GOOGLE_DCHECK_NE(&from, this);
  const NumericalValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NumericalValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.NumericalValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.NumericalValue)
    MergeFrom(*source);
  }
}

void NumericalValue::MergeFrom(const NumericalValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.NumericalValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void NumericalValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.NumericalValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NumericalValue::CopyFrom(const NumericalValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.NumericalValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NumericalValue::IsInitialized() const {
  return true;
}

void NumericalValue::InternalSwap(NumericalValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata NumericalValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DateValue::InitAsDefaultInstance() {
}
class DateValue::_Internal {
 public:
};

DateValue::DateValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.DateValue)
}
DateValue::DateValue(const DateValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:MADS.DateValue)
}

void DateValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DateValue_MADS_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DateValue::~DateValue() {
  // @@protoc_insertion_point(destructor:MADS.DateValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void DateValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DateValue::ArenaDtor(void* object) {
  DateValue* _this = reinterpret_cast< DateValue* >(object);
  (void)_this;
}
void DateValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void DateValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DateValue& DateValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DateValue_MADS_2eproto.base);
  return *internal_default_instance();
}


void DateValue::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.DateValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DateValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.DateValue.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DateValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.DateValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.DateValue.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.DateValue)
  return target;
}

size_t DateValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.DateValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DateValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.DateValue)
  GOOGLE_DCHECK_NE(&from, this);
  const DateValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DateValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.DateValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.DateValue)
    MergeFrom(*source);
  }
}

void DateValue::MergeFrom(const DateValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.DateValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void DateValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.DateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DateValue::CopyFrom(const DateValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.DateValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DateValue::IsInitialized() const {
  return true;
}

void DateValue::InternalSwap(DateValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata DateValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TimeValue::InitAsDefaultInstance() {
}
class TimeValue::_Internal {
 public:
};

TimeValue::TimeValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.TimeValue)
}
TimeValue::TimeValue(const TimeValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_value().empty()) {
    value_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_value(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:MADS.TimeValue)
}

void TimeValue::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TimeValue_MADS_2eproto.base);
  value_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

TimeValue::~TimeValue() {
  // @@protoc_insertion_point(destructor:MADS.TimeValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TimeValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  value_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TimeValue::ArenaDtor(void* object) {
  TimeValue* _this = reinterpret_cast< TimeValue* >(object);
  (void)_this;
}
void TimeValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TimeValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TimeValue& TimeValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TimeValue_MADS_2eproto.base);
  return *internal_default_instance();
}


void TimeValue::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.TimeValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TimeValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string value = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_value();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "MADS.TimeValue.value"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TimeValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.TimeValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_value().data(), static_cast<int>(this->_internal_value().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "MADS.TimeValue.value");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.TimeValue)
  return target;
}

size_t TimeValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.TimeValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string value = 1;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TimeValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.TimeValue)
  GOOGLE_DCHECK_NE(&from, this);
  const TimeValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TimeValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.TimeValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.TimeValue)
    MergeFrom(*source);
  }
}

void TimeValue::MergeFrom(const TimeValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.TimeValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.value().size() > 0) {
    _internal_set_value(from._internal_value());
  }
}

void TimeValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.TimeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TimeValue::CopyFrom(const TimeValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.TimeValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TimeValue::IsInitialized() const {
  return true;
}

void TimeValue::InternalSwap(TimeValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  value_.Swap(&other->value_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata TimeValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RGBValue::InitAsDefaultInstance() {
}
class RGBValue::_Internal {
 public:
};

RGBValue::RGBValue(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.RGBValue)
}
RGBValue::RGBValue(const RGBValue& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&red_, &from.red_,
    static_cast<size_t>(reinterpret_cast<char*>(&blue_) -
    reinterpret_cast<char*>(&red_)) + sizeof(blue_));
  // @@protoc_insertion_point(copy_constructor:MADS.RGBValue)
}

void RGBValue::SharedCtor() {
  ::memset(&red_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blue_) -
      reinterpret_cast<char*>(&red_)) + sizeof(blue_));
}

RGBValue::~RGBValue() {
  // @@protoc_insertion_point(destructor:MADS.RGBValue)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void RGBValue::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void RGBValue::ArenaDtor(void* object) {
  RGBValue* _this = reinterpret_cast< RGBValue* >(object);
  (void)_this;
}
void RGBValue::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void RGBValue::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RGBValue& RGBValue::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RGBValue_MADS_2eproto.base);
  return *internal_default_instance();
}


void RGBValue::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.RGBValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&red_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&blue_) -
      reinterpret_cast<char*>(&red_)) + sizeof(blue_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RGBValue::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 red = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          red_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 green = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          green_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 blue = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          blue_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RGBValue::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.RGBValue)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 red = 1;
  if (this->red() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_red(), target);
  }

  // int64 green = 2;
  if (this->green() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_green(), target);
  }

  // int64 blue = 3;
  if (this->blue() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_blue(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.RGBValue)
  return target;
}

size_t RGBValue::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.RGBValue)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 red = 1;
  if (this->red() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_red());
  }

  // int64 green = 2;
  if (this->green() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_green());
  }

  // int64 blue = 3;
  if (this->blue() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_blue());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RGBValue::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.RGBValue)
  GOOGLE_DCHECK_NE(&from, this);
  const RGBValue* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RGBValue>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.RGBValue)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.RGBValue)
    MergeFrom(*source);
  }
}

void RGBValue::MergeFrom(const RGBValue& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.RGBValue)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.red() != 0) {
    _internal_set_red(from._internal_red());
  }
  if (from.green() != 0) {
    _internal_set_green(from._internal_green());
  }
  if (from.blue() != 0) {
    _internal_set_blue(from._internal_blue());
  }
}

void RGBValue::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.RGBValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RGBValue::CopyFrom(const RGBValue& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.RGBValue)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RGBValue::IsInitialized() const {
  return true;
}

void RGBValue::InternalSwap(RGBValue* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RGBValue, blue_)
      + sizeof(RGBValue::blue_)
      - PROTOBUF_FIELD_OFFSET(RGBValue, red_)>(
          reinterpret_cast<char*>(&red_),
          reinterpret_cast<char*>(&other->red_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RGBValue::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Tag::InitAsDefaultInstance() {
  ::MADS::_Tag_default_instance_.alphanumerical_ = const_cast< ::MADS::AlphanumericalValue*>(
      ::MADS::AlphanumericalValue::internal_default_instance());
  ::MADS::_Tag_default_instance_.numerical_ = const_cast< ::MADS::NumericalValue*>(
      ::MADS::NumericalValue::internal_default_instance());
  ::MADS::_Tag_default_instance_.date_ = const_cast< ::MADS::DateValue*>(
      ::MADS::DateValue::internal_default_instance());
  ::MADS::_Tag_default_instance_.time_ = const_cast< ::MADS::TimeValue*>(
      ::MADS::TimeValue::internal_default_instance());
  ::MADS::_Tag_default_instance_.rgb_ = const_cast< ::MADS::RGBValue*>(
      ::MADS::RGBValue::internal_default_instance());
}
class Tag::_Internal {
 public:
  static const ::MADS::AlphanumericalValue& alphanumerical(const Tag* msg);
  static const ::MADS::NumericalValue& numerical(const Tag* msg);
  static const ::MADS::DateValue& date(const Tag* msg);
  static const ::MADS::TimeValue& time(const Tag* msg);
  static const ::MADS::RGBValue& rgb(const Tag* msg);
};

const ::MADS::AlphanumericalValue&
Tag::_Internal::alphanumerical(const Tag* msg) {
  return *msg->value_.alphanumerical_;
}
const ::MADS::NumericalValue&
Tag::_Internal::numerical(const Tag* msg) {
  return *msg->value_.numerical_;
}
const ::MADS::DateValue&
Tag::_Internal::date(const Tag* msg) {
  return *msg->value_.date_;
}
const ::MADS::TimeValue&
Tag::_Internal::time(const Tag* msg) {
  return *msg->value_.time_;
}
const ::MADS::RGBValue&
Tag::_Internal::rgb(const Tag* msg) {
  return *msg->value_.rgb_;
}
void Tag::set_allocated_alphanumerical(::MADS::AlphanumericalValue* alphanumerical) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (alphanumerical) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(alphanumerical);
    if (message_arena != submessage_arena) {
      alphanumerical = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alphanumerical, submessage_arena);
    }
    set_has_alphanumerical();
    value_.alphanumerical_ = alphanumerical;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.Tag.alphanumerical)
}
void Tag::set_allocated_numerical(::MADS::NumericalValue* numerical) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (numerical) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(numerical);
    if (message_arena != submessage_arena) {
      numerical = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, numerical, submessage_arena);
    }
    set_has_numerical();
    value_.numerical_ = numerical;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.Tag.numerical)
}
void Tag::set_allocated_date(::MADS::DateValue* date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(date);
    if (message_arena != submessage_arena) {
      date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    value_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.Tag.date)
}
void Tag::set_allocated_time(::MADS::TimeValue* time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(time);
    if (message_arena != submessage_arena) {
      time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.Tag.time)
}
void Tag::set_allocated_rgb(::MADS::RGBValue* rgb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (rgb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rgb);
    if (message_arena != submessage_arena) {
      rgb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rgb, submessage_arena);
    }
    set_has_rgb();
    value_.rgb_ = rgb;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.Tag.rgb)
}
Tag::Tag(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.Tag)
}
Tag::Tag(const Tag& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&typeid__) -
    reinterpret_cast<char*>(&id_)) + sizeof(typeid__));
  clear_has_value();
  switch (from.value_case()) {
    case kAlphanumerical: {
      _internal_mutable_alphanumerical()->::MADS::AlphanumericalValue::MergeFrom(from._internal_alphanumerical());
      break;
    }
    case kNumerical: {
      _internal_mutable_numerical()->::MADS::NumericalValue::MergeFrom(from._internal_numerical());
      break;
    }
    case kDate: {
      _internal_mutable_date()->::MADS::DateValue::MergeFrom(from._internal_date());
      break;
    }
    case kTime: {
      _internal_mutable_time()->::MADS::TimeValue::MergeFrom(from._internal_time());
      break;
    }
    case kRgb: {
      _internal_mutable_rgb()->::MADS::RGBValue::MergeFrom(from._internal_rgb());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:MADS.Tag)
}

void Tag::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Tag_MADS_2eproto.base);
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typeid__) -
      reinterpret_cast<char*>(&id_)) + sizeof(typeid__));
  clear_has_value();
}

Tag::~Tag() {
  // @@protoc_insertion_point(destructor:MADS.Tag)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Tag::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void Tag::ArenaDtor(void* object) {
  Tag* _this = reinterpret_cast< Tag* >(object);
  (void)_this;
}
void Tag::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Tag::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Tag& Tag::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Tag_MADS_2eproto.base);
  return *internal_default_instance();
}


void Tag::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:MADS.Tag)
  switch (value_case()) {
    case kAlphanumerical: {
      if (GetArena() == nullptr) {
        delete value_.alphanumerical_;
      }
      break;
    }
    case kNumerical: {
      if (GetArena() == nullptr) {
        delete value_.numerical_;
      }
      break;
    }
    case kDate: {
      if (GetArena() == nullptr) {
        delete value_.date_;
      }
      break;
    }
    case kTime: {
      if (GetArena() == nullptr) {
        delete value_.time_;
      }
      break;
    }
    case kRgb: {
      if (GetArena() == nullptr) {
        delete value_.rgb_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void Tag::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.Tag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&typeid__) -
      reinterpret_cast<char*>(&id_)) + sizeof(typeid__));
  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Tag::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 tagSetId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          tagsetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 typeId = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          typeid__ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.AlphanumericalValue alphanumerical = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_alphanumerical(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.NumericalValue numerical = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_numerical(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.DateValue date = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.TimeValue time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.RGBValue rgb = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_rgb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Tag::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.Tag)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  // int64 tagSetId = 2;
  if (this->tagsetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_tagsetid(), target);
  }

  // int64 typeId = 3;
  if (this->typeid_() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(3, this->_internal_typeid_(), target);
  }

  // .MADS.AlphanumericalValue alphanumerical = 4;
  if (_internal_has_alphanumerical()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::alphanumerical(this), target, stream);
  }

  // .MADS.NumericalValue numerical = 5;
  if (_internal_has_numerical()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::numerical(this), target, stream);
  }

  // .MADS.DateValue date = 6;
  if (_internal_has_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::date(this), target, stream);
  }

  // .MADS.TimeValue time = 7;
  if (_internal_has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::time(this), target, stream);
  }

  // .MADS.RGBValue rgb = 8;
  if (_internal_has_rgb()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::rgb(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.Tag)
  return target;
}

size_t Tag::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.Tag)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  // int64 tagSetId = 2;
  if (this->tagsetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_tagsetid());
  }

  // int64 typeId = 3;
  if (this->typeid_() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_typeid_());
  }

  switch (value_case()) {
    // .MADS.AlphanumericalValue alphanumerical = 4;
    case kAlphanumerical: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.alphanumerical_);
      break;
    }
    // .MADS.NumericalValue numerical = 5;
    case kNumerical: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.numerical_);
      break;
    }
    // .MADS.DateValue date = 6;
    case kDate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.date_);
      break;
    }
    // .MADS.TimeValue time = 7;
    case kTime: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.time_);
      break;
    }
    // .MADS.RGBValue rgb = 8;
    case kRgb: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.rgb_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tag::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  const Tag* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Tag>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.Tag)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.Tag)
    MergeFrom(*source);
  }
}

void Tag::MergeFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.Tag)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.tagsetid() != 0) {
    _internal_set_tagsetid(from._internal_tagsetid());
  }
  if (from.typeid_() != 0) {
    _internal_set_typeid_(from._internal_typeid_());
  }
  switch (from.value_case()) {
    case kAlphanumerical: {
      _internal_mutable_alphanumerical()->::MADS::AlphanumericalValue::MergeFrom(from._internal_alphanumerical());
      break;
    }
    case kNumerical: {
      _internal_mutable_numerical()->::MADS::NumericalValue::MergeFrom(from._internal_numerical());
      break;
    }
    case kDate: {
      _internal_mutable_date()->::MADS::DateValue::MergeFrom(from._internal_date());
      break;
    }
    case kTime: {
      _internal_mutable_time()->::MADS::TimeValue::MergeFrom(from._internal_time());
      break;
    }
    case kRgb: {
      _internal_mutable_rgb()->::MADS::RGBValue::MergeFrom(from._internal_rgb());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void Tag::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tag::CopyFrom(const Tag& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.Tag)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tag::IsInitialized() const {
  return true;
}

void Tag::InternalSwap(Tag* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tag, typeid__)
      + sizeof(Tag::typeid__)
      - PROTOBUF_FIELD_OFFSET(Tag, id_)>(
          reinterpret_cast<char*>(&id_),
          reinterpret_cast<char*>(&other->id_));
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Tag::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTagsRequest::InitAsDefaultInstance() {
}
class GetTagsRequest::_Internal {
 public:
};

GetTagsRequest::GetTagsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTagsRequest)
}
GetTagsRequest::GetTagsRequest(const GetTagsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MADS.GetTagsRequest)
}

void GetTagsRequest::SharedCtor() {
}

GetTagsRequest::~GetTagsRequest() {
  // @@protoc_insertion_point(destructor:MADS.GetTagsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTagsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTagsRequest::ArenaDtor(void* object) {
  GetTagsRequest* _this = reinterpret_cast< GetTagsRequest* >(object);
  (void)_this;
}
void GetTagsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTagsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTagsRequest& GetTagsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTagsRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTagsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTagsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTagsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTagsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTagsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTagsRequest)
  return target;
}

size_t GetTagsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTagsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTagsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTagsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTagsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTagsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTagsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTagsRequest)
    MergeFrom(*source);
  }
}

void GetTagsRequest::MergeFrom(const GetTagsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTagsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void GetTagsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTagsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTagsRequest::CopyFrom(const GetTagsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTagsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTagsRequest::IsInitialized() const {
  return true;
}

void GetTagsRequest::InternalSwap(GetTagsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTagsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTagsResponse::InitAsDefaultInstance() {
}
class GetTagsResponse::_Internal {
 public:
};

GetTagsResponse::GetTagsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  tags_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTagsResponse)
}
GetTagsResponse::GetTagsResponse(const GetTagsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      tags_(from.tags_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MADS.GetTagsResponse)
}

void GetTagsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetTagsResponse_MADS_2eproto.base);
}

GetTagsResponse::~GetTagsResponse() {
  // @@protoc_insertion_point(destructor:MADS.GetTagsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTagsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTagsResponse::ArenaDtor(void* object) {
  GetTagsResponse* _this = reinterpret_cast< GetTagsResponse* >(object);
  (void)_this;
}
void GetTagsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTagsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTagsResponse& GetTagsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTagsResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTagsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTagsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tags_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTagsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .MADS.Tag tags = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_tags(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTagsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTagsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MADS.Tag tags = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_tags_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_tags(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTagsResponse)
  return target;
}

size_t GetTagsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTagsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MADS.Tag tags = 1;
  total_size += 1UL * this->_internal_tags_size();
  for (const auto& msg : this->tags_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTagsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTagsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTagsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTagsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTagsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTagsResponse)
    MergeFrom(*source);
  }
}

void GetTagsResponse::MergeFrom(const GetTagsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTagsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  tags_.MergeFrom(from.tags_);
}

void GetTagsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTagsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTagsResponse::CopyFrom(const GetTagsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTagsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTagsResponse::IsInitialized() const {
  return true;
}

void GetTagsResponse::InternalSwap(GetTagsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  tags_.InternalSwap(&other->tags_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTagsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTagRequest::InitAsDefaultInstance() {
}
class GetTagRequest::_Internal {
 public:
};

GetTagRequest::GetTagRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTagRequest)
}
GetTagRequest::GetTagRequest(const GetTagRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:MADS.GetTagRequest)
}

void GetTagRequest::SharedCtor() {
  id_ = PROTOBUF_LONGLONG(0);
}

GetTagRequest::~GetTagRequest() {
  // @@protoc_insertion_point(destructor:MADS.GetTagRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTagRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTagRequest::ArenaDtor(void* object) {
  GetTagRequest* _this = reinterpret_cast< GetTagRequest* >(object);
  (void)_this;
}
void GetTagRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTagRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTagRequest& GetTagRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTagRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTagRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTagRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTagRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTagRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTagRequest)
  return target;
}

size_t GetTagRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTagRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTagRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTagRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTagRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTagRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTagRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTagRequest)
    MergeFrom(*source);
  }
}

void GetTagRequest::MergeFrom(const GetTagRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTagRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    _internal_set_id(from._internal_id());
  }
}

void GetTagRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTagRequest::CopyFrom(const GetTagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTagRequest::IsInitialized() const {
  return true;
}

void GetTagRequest::InternalSwap(GetTagRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(id_, other->id_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTagRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTagResponse::InitAsDefaultInstance() {
  ::MADS::_GetTagResponse_default_instance_._instance.get_mutable()->tag_ = const_cast< ::MADS::Tag*>(
      ::MADS::Tag::internal_default_instance());
}
class GetTagResponse::_Internal {
 public:
  static const ::MADS::Tag& tag(const GetTagResponse* msg);
};

const ::MADS::Tag&
GetTagResponse::_Internal::tag(const GetTagResponse* msg) {
  return *msg->tag_;
}
GetTagResponse::GetTagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTagResponse)
}
GetTagResponse::GetTagResponse(const GetTagResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tag()) {
    tag_ = new ::MADS::Tag(*from.tag_);
  } else {
    tag_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MADS.GetTagResponse)
}

void GetTagResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetTagResponse_MADS_2eproto.base);
  tag_ = nullptr;
}

GetTagResponse::~GetTagResponse() {
  // @@protoc_insertion_point(destructor:MADS.GetTagResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTagResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tag_;
}

void GetTagResponse::ArenaDtor(void* object) {
  GetTagResponse* _this = reinterpret_cast< GetTagResponse* >(object);
  (void)_this;
}
void GetTagResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTagResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTagResponse& GetTagResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTagResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTagResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && tag_ != nullptr) {
    delete tag_;
  }
  tag_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTagResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .MADS.Tag tag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tag(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTagResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTagResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MADS.Tag tag = 1;
  if (this->has_tag()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tag(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTagResponse)
  return target;
}

size_t GetTagResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTagResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MADS.Tag tag = 1;
  if (this->has_tag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tag_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTagResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTagResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTagResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTagResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTagResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTagResponse)
    MergeFrom(*source);
  }
}

void GetTagResponse::MergeFrom(const GetTagResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTagResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tag()) {
    _internal_mutable_tag()->::MADS::Tag::MergeFrom(from._internal_tag());
  }
}

void GetTagResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTagResponse::CopyFrom(const GetTagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTagResponse::IsInitialized() const {
  return true;
}

void GetTagResponse::InternalSwap(GetTagResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(tag_, other->tag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTagResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateTagRequest::InitAsDefaultInstance() {
  ::MADS::_CreateTagRequest_default_instance_.alphanumerical_ = const_cast< ::MADS::AlphanumericalValue*>(
      ::MADS::AlphanumericalValue::internal_default_instance());
  ::MADS::_CreateTagRequest_default_instance_.numerical_ = const_cast< ::MADS::NumericalValue*>(
      ::MADS::NumericalValue::internal_default_instance());
  ::MADS::_CreateTagRequest_default_instance_.date_ = const_cast< ::MADS::DateValue*>(
      ::MADS::DateValue::internal_default_instance());
  ::MADS::_CreateTagRequest_default_instance_.time_ = const_cast< ::MADS::TimeValue*>(
      ::MADS::TimeValue::internal_default_instance());
  ::MADS::_CreateTagRequest_default_instance_.rgb_ = const_cast< ::MADS::RGBValue*>(
      ::MADS::RGBValue::internal_default_instance());
}
class CreateTagRequest::_Internal {
 public:
  static const ::MADS::AlphanumericalValue& alphanumerical(const CreateTagRequest* msg);
  static const ::MADS::NumericalValue& numerical(const CreateTagRequest* msg);
  static const ::MADS::DateValue& date(const CreateTagRequest* msg);
  static const ::MADS::TimeValue& time(const CreateTagRequest* msg);
  static const ::MADS::RGBValue& rgb(const CreateTagRequest* msg);
};

const ::MADS::AlphanumericalValue&
CreateTagRequest::_Internal::alphanumerical(const CreateTagRequest* msg) {
  return *msg->value_.alphanumerical_;
}
const ::MADS::NumericalValue&
CreateTagRequest::_Internal::numerical(const CreateTagRequest* msg) {
  return *msg->value_.numerical_;
}
const ::MADS::DateValue&
CreateTagRequest::_Internal::date(const CreateTagRequest* msg) {
  return *msg->value_.date_;
}
const ::MADS::TimeValue&
CreateTagRequest::_Internal::time(const CreateTagRequest* msg) {
  return *msg->value_.time_;
}
const ::MADS::RGBValue&
CreateTagRequest::_Internal::rgb(const CreateTagRequest* msg) {
  return *msg->value_.rgb_;
}
void CreateTagRequest::set_allocated_alphanumerical(::MADS::AlphanumericalValue* alphanumerical) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (alphanumerical) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(alphanumerical);
    if (message_arena != submessage_arena) {
      alphanumerical = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, alphanumerical, submessage_arena);
    }
    set_has_alphanumerical();
    value_.alphanumerical_ = alphanumerical;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.CreateTagRequest.alphanumerical)
}
void CreateTagRequest::set_allocated_numerical(::MADS::NumericalValue* numerical) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (numerical) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(numerical);
    if (message_arena != submessage_arena) {
      numerical = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, numerical, submessage_arena);
    }
    set_has_numerical();
    value_.numerical_ = numerical;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.CreateTagRequest.numerical)
}
void CreateTagRequest::set_allocated_date(::MADS::DateValue* date) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (date) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(date);
    if (message_arena != submessage_arena) {
      date = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, date, submessage_arena);
    }
    set_has_date();
    value_.date_ = date;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.CreateTagRequest.date)
}
void CreateTagRequest::set_allocated_time(::MADS::TimeValue* time) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (time) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(time);
    if (message_arena != submessage_arena) {
      time = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, time, submessage_arena);
    }
    set_has_time();
    value_.time_ = time;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.CreateTagRequest.time)
}
void CreateTagRequest::set_allocated_rgb(::MADS::RGBValue* rgb) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_value();
  if (rgb) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(rgb);
    if (message_arena != submessage_arena) {
      rgb = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rgb, submessage_arena);
    }
    set_has_rgb();
    value_.rgb_ = rgb;
  }
  // @@protoc_insertion_point(field_set_allocated:MADS.CreateTagRequest.rgb)
}
CreateTagRequest::CreateTagRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.CreateTagRequest)
}
CreateTagRequest::CreateTagRequest(const CreateTagRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tagsetid_ = from.tagsetid_;
  clear_has_value();
  switch (from.value_case()) {
    case kAlphanumerical: {
      _internal_mutable_alphanumerical()->::MADS::AlphanumericalValue::MergeFrom(from._internal_alphanumerical());
      break;
    }
    case kNumerical: {
      _internal_mutable_numerical()->::MADS::NumericalValue::MergeFrom(from._internal_numerical());
      break;
    }
    case kDate: {
      _internal_mutable_date()->::MADS::DateValue::MergeFrom(from._internal_date());
      break;
    }
    case kTime: {
      _internal_mutable_time()->::MADS::TimeValue::MergeFrom(from._internal_time());
      break;
    }
    case kRgb: {
      _internal_mutable_rgb()->::MADS::RGBValue::MergeFrom(from._internal_rgb());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:MADS.CreateTagRequest)
}

void CreateTagRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateTagRequest_MADS_2eproto.base);
  tagsetid_ = PROTOBUF_LONGLONG(0);
  clear_has_value();
}

CreateTagRequest::~CreateTagRequest() {
  // @@protoc_insertion_point(destructor:MADS.CreateTagRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTagRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_value()) {
    clear_value();
  }
}

void CreateTagRequest::ArenaDtor(void* object) {
  CreateTagRequest* _this = reinterpret_cast< CreateTagRequest* >(object);
  (void)_this;
}
void CreateTagRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTagRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTagRequest& CreateTagRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateTagRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void CreateTagRequest::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:MADS.CreateTagRequest)
  switch (value_case()) {
    case kAlphanumerical: {
      if (GetArena() == nullptr) {
        delete value_.alphanumerical_;
      }
      break;
    }
    case kNumerical: {
      if (GetArena() == nullptr) {
        delete value_.numerical_;
      }
      break;
    }
    case kDate: {
      if (GetArena() == nullptr) {
        delete value_.date_;
      }
      break;
    }
    case kTime: {
      if (GetArena() == nullptr) {
        delete value_.time_;
      }
      break;
    }
    case kRgb: {
      if (GetArena() == nullptr) {
        delete value_.rgb_;
      }
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void CreateTagRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.CreateTagRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagsetid_ = PROTOBUF_LONGLONG(0);
  clear_value();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTagRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 tagSetId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tagsetid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.AlphanumericalValue alphanumerical = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_alphanumerical(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.NumericalValue numerical = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_numerical(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.DateValue date = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_date(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.TimeValue time = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_time(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .MADS.RGBValue rgb = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_rgb(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTagRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.CreateTagRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tagSetId = 1;
  if (this->tagsetid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_tagsetid(), target);
  }

  // .MADS.AlphanumericalValue alphanumerical = 4;
  if (_internal_has_alphanumerical()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::alphanumerical(this), target, stream);
  }

  // .MADS.NumericalValue numerical = 5;
  if (_internal_has_numerical()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::numerical(this), target, stream);
  }

  // .MADS.DateValue date = 6;
  if (_internal_has_date()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::date(this), target, stream);
  }

  // .MADS.TimeValue time = 7;
  if (_internal_has_time()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::time(this), target, stream);
  }

  // .MADS.RGBValue rgb = 8;
  if (_internal_has_rgb()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::rgb(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.CreateTagRequest)
  return target;
}

size_t CreateTagRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.CreateTagRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 tagSetId = 1;
  if (this->tagsetid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_tagsetid());
  }

  switch (value_case()) {
    // .MADS.AlphanumericalValue alphanumerical = 4;
    case kAlphanumerical: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.alphanumerical_);
      break;
    }
    // .MADS.NumericalValue numerical = 5;
    case kNumerical: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.numerical_);
      break;
    }
    // .MADS.DateValue date = 6;
    case kDate: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.date_);
      break;
    }
    // .MADS.TimeValue time = 7;
    case kTime: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.time_);
      break;
    }
    // .MADS.RGBValue rgb = 8;
    case kRgb: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.rgb_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTagRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.CreateTagRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTagRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTagRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.CreateTagRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.CreateTagRequest)
    MergeFrom(*source);
  }
}

void CreateTagRequest::MergeFrom(const CreateTagRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.CreateTagRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tagsetid() != 0) {
    _internal_set_tagsetid(from._internal_tagsetid());
  }
  switch (from.value_case()) {
    case kAlphanumerical: {
      _internal_mutable_alphanumerical()->::MADS::AlphanumericalValue::MergeFrom(from._internal_alphanumerical());
      break;
    }
    case kNumerical: {
      _internal_mutable_numerical()->::MADS::NumericalValue::MergeFrom(from._internal_numerical());
      break;
    }
    case kDate: {
      _internal_mutable_date()->::MADS::DateValue::MergeFrom(from._internal_date());
      break;
    }
    case kTime: {
      _internal_mutable_time()->::MADS::TimeValue::MergeFrom(from._internal_time());
      break;
    }
    case kRgb: {
      _internal_mutable_rgb()->::MADS::RGBValue::MergeFrom(from._internal_rgb());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void CreateTagRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.CreateTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTagRequest::CopyFrom(const CreateTagRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.CreateTagRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTagRequest::IsInitialized() const {
  return true;
}

void CreateTagRequest::InternalSwap(CreateTagRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(tagsetid_, other->tagsetid_);
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTagRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateTagResponse::InitAsDefaultInstance() {
  ::MADS::_CreateTagResponse_default_instance_._instance.get_mutable()->tag_ = const_cast< ::MADS::Tag*>(
      ::MADS::Tag::internal_default_instance());
}
class CreateTagResponse::_Internal {
 public:
  static const ::MADS::Tag& tag(const CreateTagResponse* msg);
};

const ::MADS::Tag&
CreateTagResponse::_Internal::tag(const CreateTagResponse* msg) {
  return *msg->tag_;
}
CreateTagResponse::CreateTagResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.CreateTagResponse)
}
CreateTagResponse::CreateTagResponse(const CreateTagResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tag()) {
    tag_ = new ::MADS::Tag(*from.tag_);
  } else {
    tag_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MADS.CreateTagResponse)
}

void CreateTagResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateTagResponse_MADS_2eproto.base);
  tag_ = nullptr;
}

CreateTagResponse::~CreateTagResponse() {
  // @@protoc_insertion_point(destructor:MADS.CreateTagResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTagResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tag_;
}

void CreateTagResponse::ArenaDtor(void* object) {
  CreateTagResponse* _this = reinterpret_cast< CreateTagResponse* >(object);
  (void)_this;
}
void CreateTagResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTagResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTagResponse& CreateTagResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateTagResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void CreateTagResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.CreateTagResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && tag_ != nullptr) {
    delete tag_;
  }
  tag_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTagResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .MADS.Tag tag = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tag(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTagResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.CreateTagResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MADS.Tag tag = 1;
  if (this->has_tag()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tag(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.CreateTagResponse)
  return target;
}

size_t CreateTagResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.CreateTagResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MADS.Tag tag = 1;
  if (this->has_tag()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tag_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTagResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.CreateTagResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTagResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTagResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.CreateTagResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.CreateTagResponse)
    MergeFrom(*source);
  }
}

void CreateTagResponse::MergeFrom(const CreateTagResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.CreateTagResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tag()) {
    _internal_mutable_tag()->::MADS::Tag::MergeFrom(from._internal_tag());
  }
}

void CreateTagResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.CreateTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTagResponse::CopyFrom(const CreateTagResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.CreateTagResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTagResponse::IsInitialized() const {
  return true;
}

void CreateTagResponse::InternalSwap(CreateTagResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(tag_, other->tag_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTagResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Tagging::InitAsDefaultInstance() {
}
class Tagging::_Internal {
 public:
};

Tagging::Tagging(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.Tagging)
}
Tagging::Tagging(const Tagging& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&tagid_, &from.tagid_,
    static_cast<size_t>(reinterpret_cast<char*>(&objectid_) -
    reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
  // @@protoc_insertion_point(copy_constructor:MADS.Tagging)
}

void Tagging::SharedCtor() {
  ::memset(&tagid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
}

Tagging::~Tagging() {
  // @@protoc_insertion_point(destructor:MADS.Tagging)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Tagging::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Tagging::ArenaDtor(void* object) {
  Tagging* _this = reinterpret_cast< Tagging* >(object);
  (void)_this;
}
void Tagging::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Tagging::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Tagging& Tagging::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Tagging_MADS_2eproto.base);
  return *internal_default_instance();
}


void Tagging::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.Tagging)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tagid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Tagging::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 tagId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tagid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 objectId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Tagging::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.Tagging)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tagId = 1;
  if (this->tagid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_tagid(), target);
  }

  // int64 objectId = 2;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.Tagging)
  return target;
}

size_t Tagging::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.Tagging)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 tagId = 1;
  if (this->tagid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_tagid());
  }

  // int64 objectId = 2;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Tagging::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.Tagging)
  GOOGLE_DCHECK_NE(&from, this);
  const Tagging* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Tagging>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.Tagging)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.Tagging)
    MergeFrom(*source);
  }
}

void Tagging::MergeFrom(const Tagging& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.Tagging)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tagid() != 0) {
    _internal_set_tagid(from._internal_tagid());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void Tagging::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.Tagging)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tagging::CopyFrom(const Tagging& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.Tagging)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tagging::IsInitialized() const {
  return true;
}

void Tagging::InternalSwap(Tagging* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Tagging, objectid_)
      + sizeof(Tagging::objectid_)
      - PROTOBUF_FIELD_OFFSET(Tagging, tagid_)>(
          reinterpret_cast<char*>(&tagid_),
          reinterpret_cast<char*>(&other->tagid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Tagging::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTaggingsRequest::InitAsDefaultInstance() {
}
class GetTaggingsRequest::_Internal {
 public:
};

GetTaggingsRequest::GetTaggingsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTaggingsRequest)
}
GetTaggingsRequest::GetTaggingsRequest(const GetTaggingsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  tagid_ = from.tagid_;
  // @@protoc_insertion_point(copy_constructor:MADS.GetTaggingsRequest)
}

void GetTaggingsRequest::SharedCtor() {
  tagid_ = PROTOBUF_LONGLONG(0);
}

GetTaggingsRequest::~GetTaggingsRequest() {
  // @@protoc_insertion_point(destructor:MADS.GetTaggingsRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTaggingsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTaggingsRequest::ArenaDtor(void* object) {
  GetTaggingsRequest* _this = reinterpret_cast< GetTaggingsRequest* >(object);
  (void)_this;
}
void GetTaggingsRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTaggingsRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTaggingsRequest& GetTaggingsRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTaggingsRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTaggingsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTaggingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tagid_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTaggingsRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 tagId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tagid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTaggingsRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTaggingsRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tagId = 1;
  if (this->tagid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_tagid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTaggingsRequest)
  return target;
}

size_t GetTaggingsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTaggingsRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 tagId = 1;
  if (this->tagid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_tagid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTaggingsRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTaggingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTaggingsRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTaggingsRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTaggingsRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTaggingsRequest)
    MergeFrom(*source);
  }
}

void GetTaggingsRequest::MergeFrom(const GetTaggingsRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTaggingsRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tagid() != 0) {
    _internal_set_tagid(from._internal_tagid());
  }
}

void GetTaggingsRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTaggingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTaggingsRequest::CopyFrom(const GetTaggingsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTaggingsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTaggingsRequest::IsInitialized() const {
  return true;
}

void GetTaggingsRequest::InternalSwap(GetTaggingsRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(tagid_, other->tagid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTaggingsRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTaggingsResponse::InitAsDefaultInstance() {
}
class GetTaggingsResponse::_Internal {
 public:
};

GetTaggingsResponse::GetTaggingsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  taggings_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTaggingsResponse)
}
GetTaggingsResponse::GetTaggingsResponse(const GetTaggingsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      taggings_(from.taggings_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MADS.GetTaggingsResponse)
}

void GetTaggingsResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetTaggingsResponse_MADS_2eproto.base);
}

GetTaggingsResponse::~GetTaggingsResponse() {
  // @@protoc_insertion_point(destructor:MADS.GetTaggingsResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTaggingsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTaggingsResponse::ArenaDtor(void* object) {
  GetTaggingsResponse* _this = reinterpret_cast< GetTaggingsResponse* >(object);
  (void)_this;
}
void GetTaggingsResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTaggingsResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTaggingsResponse& GetTaggingsResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTaggingsResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTaggingsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTaggingsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  taggings_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTaggingsResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated .MADS.Tagging taggings = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_taggings(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTaggingsResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTaggingsResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .MADS.Tagging taggings = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_taggings_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, this->_internal_taggings(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTaggingsResponse)
  return target;
}

size_t GetTaggingsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTaggingsResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .MADS.Tagging taggings = 1;
  total_size += 1UL * this->_internal_taggings_size();
  for (const auto& msg : this->taggings_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTaggingsResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTaggingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTaggingsResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTaggingsResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTaggingsResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTaggingsResponse)
    MergeFrom(*source);
  }
}

void GetTaggingsResponse::MergeFrom(const GetTaggingsResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTaggingsResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  taggings_.MergeFrom(from.taggings_);
}

void GetTaggingsResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTaggingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTaggingsResponse::CopyFrom(const GetTaggingsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTaggingsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTaggingsResponse::IsInitialized() const {
  return true;
}

void GetTaggingsResponse::InternalSwap(GetTaggingsResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  taggings_.InternalSwap(&other->taggings_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTaggingsResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTaggingRequest::InitAsDefaultInstance() {
}
class GetTaggingRequest::_Internal {
 public:
};

GetTaggingRequest::GetTaggingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTaggingRequest)
}
GetTaggingRequest::GetTaggingRequest(const GetTaggingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&tagid_, &from.tagid_,
    static_cast<size_t>(reinterpret_cast<char*>(&objectid_) -
    reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
  // @@protoc_insertion_point(copy_constructor:MADS.GetTaggingRequest)
}

void GetTaggingRequest::SharedCtor() {
  ::memset(&tagid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
}

GetTaggingRequest::~GetTaggingRequest() {
  // @@protoc_insertion_point(destructor:MADS.GetTaggingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTaggingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void GetTaggingRequest::ArenaDtor(void* object) {
  GetTaggingRequest* _this = reinterpret_cast< GetTaggingRequest* >(object);
  (void)_this;
}
void GetTaggingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTaggingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTaggingRequest& GetTaggingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTaggingRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTaggingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTaggingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tagid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTaggingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 tagId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tagid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 objectId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTaggingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTaggingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tagId = 1;
  if (this->tagid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_tagid(), target);
  }

  // int64 objectId = 2;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTaggingRequest)
  return target;
}

size_t GetTaggingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTaggingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 tagId = 1;
  if (this->tagid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_tagid());
  }

  // int64 objectId = 2;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTaggingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTaggingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTaggingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTaggingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTaggingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTaggingRequest)
    MergeFrom(*source);
  }
}

void GetTaggingRequest::MergeFrom(const GetTaggingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTaggingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tagid() != 0) {
    _internal_set_tagid(from._internal_tagid());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void GetTaggingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTaggingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTaggingRequest::CopyFrom(const GetTaggingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTaggingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTaggingRequest::IsInitialized() const {
  return true;
}

void GetTaggingRequest::InternalSwap(GetTaggingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetTaggingRequest, objectid_)
      + sizeof(GetTaggingRequest::objectid_)
      - PROTOBUF_FIELD_OFFSET(GetTaggingRequest, tagid_)>(
          reinterpret_cast<char*>(&tagid_),
          reinterpret_cast<char*>(&other->tagid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTaggingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void GetTaggingResponse::InitAsDefaultInstance() {
  ::MADS::_GetTaggingResponse_default_instance_._instance.get_mutable()->tagging_ = const_cast< ::MADS::Tagging*>(
      ::MADS::Tagging::internal_default_instance());
}
class GetTaggingResponse::_Internal {
 public:
  static const ::MADS::Tagging& tagging(const GetTaggingResponse* msg);
};

const ::MADS::Tagging&
GetTaggingResponse::_Internal::tagging(const GetTaggingResponse* msg) {
  return *msg->tagging_;
}
GetTaggingResponse::GetTaggingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.GetTaggingResponse)
}
GetTaggingResponse::GetTaggingResponse(const GetTaggingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tagging()) {
    tagging_ = new ::MADS::Tagging(*from.tagging_);
  } else {
    tagging_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MADS.GetTaggingResponse)
}

void GetTaggingResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetTaggingResponse_MADS_2eproto.base);
  tagging_ = nullptr;
}

GetTaggingResponse::~GetTaggingResponse() {
  // @@protoc_insertion_point(destructor:MADS.GetTaggingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetTaggingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tagging_;
}

void GetTaggingResponse::ArenaDtor(void* object) {
  GetTaggingResponse* _this = reinterpret_cast< GetTaggingResponse* >(object);
  (void)_this;
}
void GetTaggingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetTaggingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetTaggingResponse& GetTaggingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetTaggingResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void GetTaggingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.GetTaggingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && tagging_ != nullptr) {
    delete tagging_;
  }
  tagging_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetTaggingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .MADS.Tagging tagging = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tagging(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetTaggingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.GetTaggingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MADS.Tagging tagging = 1;
  if (this->has_tagging()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tagging(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.GetTaggingResponse)
  return target;
}

size_t GetTaggingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.GetTaggingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MADS.Tagging tagging = 1;
  if (this->has_tagging()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tagging_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetTaggingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.GetTaggingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetTaggingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetTaggingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.GetTaggingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.GetTaggingResponse)
    MergeFrom(*source);
  }
}

void GetTaggingResponse::MergeFrom(const GetTaggingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.GetTaggingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tagging()) {
    _internal_mutable_tagging()->::MADS::Tagging::MergeFrom(from._internal_tagging());
  }
}

void GetTaggingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.GetTaggingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetTaggingResponse::CopyFrom(const GetTaggingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.GetTaggingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetTaggingResponse::IsInitialized() const {
  return true;
}

void GetTaggingResponse::InternalSwap(GetTaggingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(tagging_, other->tagging_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetTaggingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateTaggingRequest::InitAsDefaultInstance() {
}
class CreateTaggingRequest::_Internal {
 public:
};

CreateTaggingRequest::CreateTaggingRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.CreateTaggingRequest)
}
CreateTaggingRequest::CreateTaggingRequest(const CreateTaggingRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&tagid_, &from.tagid_,
    static_cast<size_t>(reinterpret_cast<char*>(&objectid_) -
    reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
  // @@protoc_insertion_point(copy_constructor:MADS.CreateTaggingRequest)
}

void CreateTaggingRequest::SharedCtor() {
  ::memset(&tagid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
}

CreateTaggingRequest::~CreateTaggingRequest() {
  // @@protoc_insertion_point(destructor:MADS.CreateTaggingRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTaggingRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void CreateTaggingRequest::ArenaDtor(void* object) {
  CreateTaggingRequest* _this = reinterpret_cast< CreateTaggingRequest* >(object);
  (void)_this;
}
void CreateTaggingRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTaggingRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTaggingRequest& CreateTaggingRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateTaggingRequest_MADS_2eproto.base);
  return *internal_default_instance();
}


void CreateTaggingRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.CreateTaggingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&tagid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&objectid_) -
      reinterpret_cast<char*>(&tagid_)) + sizeof(objectid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTaggingRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int64 tagId = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          tagid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 objectId = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          objectid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTaggingRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.CreateTaggingRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 tagId = 1;
  if (this->tagid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(1, this->_internal_tagid(), target);
  }

  // int64 objectId = 2;
  if (this->objectid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_objectid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.CreateTaggingRequest)
  return target;
}

size_t CreateTaggingRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.CreateTaggingRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 tagId = 1;
  if (this->tagid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_tagid());
  }

  // int64 objectId = 2;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_objectid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTaggingRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.CreateTaggingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTaggingRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTaggingRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.CreateTaggingRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.CreateTaggingRequest)
    MergeFrom(*source);
  }
}

void CreateTaggingRequest::MergeFrom(const CreateTaggingRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.CreateTaggingRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tagid() != 0) {
    _internal_set_tagid(from._internal_tagid());
  }
  if (from.objectid() != 0) {
    _internal_set_objectid(from._internal_objectid());
  }
}

void CreateTaggingRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.CreateTaggingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTaggingRequest::CopyFrom(const CreateTaggingRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.CreateTaggingRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTaggingRequest::IsInitialized() const {
  return true;
}

void CreateTaggingRequest::InternalSwap(CreateTaggingRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateTaggingRequest, objectid_)
      + sizeof(CreateTaggingRequest::objectid_)
      - PROTOBUF_FIELD_OFFSET(CreateTaggingRequest, tagid_)>(
          reinterpret_cast<char*>(&tagid_),
          reinterpret_cast<char*>(&other->tagid_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTaggingRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void CreateTaggingResponse::InitAsDefaultInstance() {
  ::MADS::_CreateTaggingResponse_default_instance_._instance.get_mutable()->tagging_ = const_cast< ::MADS::Tagging*>(
      ::MADS::Tagging::internal_default_instance());
}
class CreateTaggingResponse::_Internal {
 public:
  static const ::MADS::Tagging& tagging(const CreateTaggingResponse* msg);
};

const ::MADS::Tagging&
CreateTaggingResponse::_Internal::tagging(const CreateTaggingResponse* msg) {
  return *msg->tagging_;
}
CreateTaggingResponse::CreateTaggingResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.CreateTaggingResponse)
}
CreateTaggingResponse::CreateTaggingResponse(const CreateTaggingResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_tagging()) {
    tagging_ = new ::MADS::Tagging(*from.tagging_);
  } else {
    tagging_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:MADS.CreateTaggingResponse)
}

void CreateTaggingResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CreateTaggingResponse_MADS_2eproto.base);
  tagging_ = nullptr;
}

CreateTaggingResponse::~CreateTaggingResponse() {
  // @@protoc_insertion_point(destructor:MADS.CreateTaggingResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void CreateTaggingResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete tagging_;
}

void CreateTaggingResponse::ArenaDtor(void* object) {
  CreateTaggingResponse* _this = reinterpret_cast< CreateTaggingResponse* >(object);
  (void)_this;
}
void CreateTaggingResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void CreateTaggingResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CreateTaggingResponse& CreateTaggingResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CreateTaggingResponse_MADS_2eproto.base);
  return *internal_default_instance();
}


void CreateTaggingResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.CreateTaggingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && tagging_ != nullptr) {
    delete tagging_;
  }
  tagging_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateTaggingResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .MADS.Tagging tagging = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_tagging(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CreateTaggingResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.CreateTaggingResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .MADS.Tagging tagging = 1;
  if (this->has_tagging()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::tagging(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.CreateTaggingResponse)
  return target;
}

size_t CreateTaggingResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.CreateTaggingResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .MADS.Tagging tagging = 1;
  if (this->has_tagging()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *tagging_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CreateTaggingResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.CreateTaggingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateTaggingResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CreateTaggingResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.CreateTaggingResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.CreateTaggingResponse)
    MergeFrom(*source);
  }
}

void CreateTaggingResponse::MergeFrom(const CreateTaggingResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.CreateTaggingResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_tagging()) {
    _internal_mutable_tagging()->::MADS::Tagging::MergeFrom(from._internal_tagging());
  }
}

void CreateTaggingResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.CreateTaggingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateTaggingResponse::CopyFrom(const CreateTaggingResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.CreateTaggingResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateTaggingResponse::IsInitialized() const {
  return true;
}

void CreateTaggingResponse::InternalSwap(CreateTaggingResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(tagging_, other->tagging_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateTaggingResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Empty::InitAsDefaultInstance() {
}
class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:MADS.Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:MADS.Empty)
}

void Empty::SharedCtor() {
}

Empty::~Empty() {
  // @@protoc_insertion_point(destructor:MADS.Empty)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Empty::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void Empty::ArenaDtor(void* object) {
  Empty* _this = reinterpret_cast< Empty* >(object);
  (void)_this;
}
void Empty::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Empty::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Empty& Empty::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Empty_MADS_2eproto.base);
  return *internal_default_instance();
}


void Empty::Clear() {
// @@protoc_insertion_point(message_clear_start:MADS.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Empty::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Empty::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:MADS.Empty)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:MADS.Empty)
  return target;
}

size_t Empty::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:MADS.Empty)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Empty::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:MADS.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  const Empty* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Empty>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:MADS.Empty)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:MADS.Empty)
    MergeFrom(*source);
  }
}

void Empty::MergeFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:MADS.Empty)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Empty::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:MADS.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Empty::CopyFrom(const Empty& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:MADS.Empty)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Empty::IsInitialized() const {
  return true;
}

void Empty::InternalSwap(Empty* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace MADS
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::MADS::Object* Arena::CreateMaybeMessage< ::MADS::Object >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::Object >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetObjectRequest* Arena::CreateMaybeMessage< ::MADS::GetObjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetObjectResponse* Arena::CreateMaybeMessage< ::MADS::GetObjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::CreateObjectRequest* Arena::CreateMaybeMessage< ::MADS::CreateObjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::CreateObjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::CreateObjectResponse* Arena::CreateMaybeMessage< ::MADS::CreateObjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::CreateObjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::TagSet* Arena::CreateMaybeMessage< ::MADS::TagSet >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::TagSet >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTagSetsRequest* Arena::CreateMaybeMessage< ::MADS::GetTagSetsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTagSetsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTagSetsResponse* Arena::CreateMaybeMessage< ::MADS::GetTagSetsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTagSetsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTagSetRequest* Arena::CreateMaybeMessage< ::MADS::GetTagSetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTagSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTagSetResponse* Arena::CreateMaybeMessage< ::MADS::GetTagSetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTagSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::CreateTagSetRequest* Arena::CreateMaybeMessage< ::MADS::CreateTagSetRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::CreateTagSetRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::CreateTagSetResponse* Arena::CreateMaybeMessage< ::MADS::CreateTagSetResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::CreateTagSetResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::AlphanumericalValue* Arena::CreateMaybeMessage< ::MADS::AlphanumericalValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::AlphanumericalValue >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::NumericalValue* Arena::CreateMaybeMessage< ::MADS::NumericalValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::NumericalValue >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::DateValue* Arena::CreateMaybeMessage< ::MADS::DateValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::DateValue >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::TimeValue* Arena::CreateMaybeMessage< ::MADS::TimeValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::TimeValue >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::RGBValue* Arena::CreateMaybeMessage< ::MADS::RGBValue >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::RGBValue >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::Tag* Arena::CreateMaybeMessage< ::MADS::Tag >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::Tag >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTagsRequest* Arena::CreateMaybeMessage< ::MADS::GetTagsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTagsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTagsResponse* Arena::CreateMaybeMessage< ::MADS::GetTagsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTagsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTagRequest* Arena::CreateMaybeMessage< ::MADS::GetTagRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTagRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTagResponse* Arena::CreateMaybeMessage< ::MADS::GetTagResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTagResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::CreateTagRequest* Arena::CreateMaybeMessage< ::MADS::CreateTagRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::CreateTagRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::CreateTagResponse* Arena::CreateMaybeMessage< ::MADS::CreateTagResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::CreateTagResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::Tagging* Arena::CreateMaybeMessage< ::MADS::Tagging >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::Tagging >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTaggingsRequest* Arena::CreateMaybeMessage< ::MADS::GetTaggingsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTaggingsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTaggingsResponse* Arena::CreateMaybeMessage< ::MADS::GetTaggingsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTaggingsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTaggingRequest* Arena::CreateMaybeMessage< ::MADS::GetTaggingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTaggingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::GetTaggingResponse* Arena::CreateMaybeMessage< ::MADS::GetTaggingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::GetTaggingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::CreateTaggingRequest* Arena::CreateMaybeMessage< ::MADS::CreateTaggingRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::CreateTaggingRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::CreateTaggingResponse* Arena::CreateMaybeMessage< ::MADS::CreateTaggingResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::CreateTaggingResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::MADS::Empty* Arena::CreateMaybeMessage< ::MADS::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::MADS::Empty >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
